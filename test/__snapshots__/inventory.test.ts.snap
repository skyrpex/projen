// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`inventory 1`] = `
Array [
  Object {
    "docs": "AWS CDK app in TypeScript.",
    "docsurl": "https://github.com/projen/projen/blob/master/API.md#projen-awscdktypescriptapp",
    "fqn": "projen.AwsCdkTypeScriptApp",
    "moduleName": "projen",
    "options": Array [
      Object {
        "default": "true",
        "docs": "Allow the project to include \`peerDependencies\` and \`bundledDependencies\`.",
        "name": "allowLibraryDependencies",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "allowLibraryDependencies",
        ],
        "switch": "allow-library-dependencies",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Checks that after build there are no modified files on git.",
        "name": "antitamper",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "antitamper",
        ],
        "switch": "antitamper",
        "type": "boolean",
      },
      Object {
        "default": "\\"main.ts\\"",
        "docs": "The CDK app's entrypoint (relative to the source directory, which is \\"src\\" by default).",
        "name": "appEntrypoint",
        "optional": true,
        "parent": "AwsCdkTypeScriptAppOptions",
        "path": Array [
          "appEntrypoint",
        ],
        "switch": "app-entrypoint",
        "type": "string",
      },
      Object {
        "docs": "Author's e-mail.",
        "name": "authorEmail",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "authorEmail",
        ],
        "switch": "author-email",
        "type": "string",
      },
      Object {
        "docs": "Author's name.",
        "name": "authorName",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "authorName",
        ],
        "switch": "author-name",
        "type": "string",
      },
      Object {
        "docs": "Author's Organization.",
        "name": "authorOrganization",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "authorOrganization",
        ],
        "switch": "author-organization",
        "type": "boolean",
      },
      Object {
        "docs": "Author's URL / Website.",
        "name": "authorUrl",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "authorUrl",
        ],
        "switch": "author-url",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Automatically add all executables under the \`bin\` directory to your \`package.json\` file under the \`bin\` section.",
        "name": "autoDetectBin",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "autoDetectBin",
        ],
        "switch": "auto-detect-bin",
        "type": "boolean",
      },
      Object {
        "docs": "Binary programs vended with your module.",
        "name": "bin",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "bin",
        ],
        "switch": "bin",
        "type": "unknown",
      },
      Object {
        "default": "- true if not a subproject",
        "docs": "Define a GitHub workflow for building PRs.",
        "name": "buildWorkflow",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "buildWorkflow",
        ],
        "switch": "build-workflow",
        "type": "boolean",
      },
      Object {
        "docs": "List of dependencies to bundle into this module.",
        "name": "bundledDeps",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "bundledDeps",
        ],
        "switch": "bundled-deps",
        "type": "unknown",
      },
      Object {
        "docs": "Which AWS CDK modules (those that start with \\"@aws-cdk/\\") this app uses.",
        "name": "cdkDependencies",
        "optional": true,
        "parent": "AwsCdkTypeScriptAppOptions",
        "path": Array [
          "cdkDependencies",
        ],
        "switch": "cdk-dependencies",
        "type": "unknown",
      },
      Object {
        "default": "\\"1.73.0\\"",
        "docs": "AWS CDK version to use.",
        "name": "cdkVersion",
        "parent": "AwsCdkTypeScriptAppOptions",
        "path": Array [
          "cdkVersion",
        ],
        "switch": "cdk-version",
        "type": "string",
      },
      Object {
        "default": "false",
        "docs": "Use pinned version instead of caret version for CDK.",
        "name": "cdkVersionPinning",
        "optional": true,
        "parent": "AwsCdkTypeScriptAppOptions",
        "path": Array [
          "cdkVersionPinning",
        ],
        "switch": "cdk-version-pinning",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Add a \`clobber\` task which resets the repo to origin.",
        "name": "clobber",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "clobber",
        ],
        "switch": "clobber",
        "type": "boolean",
      },
      Object {
        "default": "false",
        "docs": "Define a GitHub workflow step for sending code coverage metrics to https://codecov.io/ Uses codecov/codecov-action@v1 A secret is required for private repos. Configured with @codeCovTokenSecret.",
        "name": "codeCov",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "codeCov",
        ],
        "switch": "code-cov",
        "type": "boolean",
      },
      Object {
        "default": "- if this option is not specified, only public repositories are supported",
        "docs": "Define the secret name for a specified https://codecov.io/ token A secret is required to send coverage for private repositories.",
        "name": "codeCovTokenSecret",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "codeCovTokenSecret",
        ],
        "switch": "code-cov-token-secret",
        "type": "string",
      },
      Object {
        "default": "- the default behavior is to delete the lib/ directory and run
jest typescript tests and only if all tests pass, run the compiler.",
        "docs": "Compile the code before running tests.",
        "name": "compileBeforeTest",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "compileBeforeTest",
        ],
        "switch": "compile-before-test",
        "type": "boolean",
      },
      Object {
        "docs": "Additional context to include in \`cdk.json\`.",
        "name": "context",
        "optional": true,
        "parent": "AwsCdkTypeScriptAppOptions",
        "path": Array [
          "context",
        ],
        "switch": "context",
        "type": "unknown",
      },
      Object {
        "default": "- defaults to the value of authorName or \\"\\" if \`authorName\` is undefined.",
        "docs": "License copyright owner.",
        "name": "copyrightOwner",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "copyrightOwner",
        ],
        "switch": "copyright-owner",
        "type": "string",
      },
      Object {
        "default": "- current year",
        "docs": "The copyright years to put in the LICENSE file.",
        "name": "copyrightPeriod",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "copyrightPeriod",
        ],
        "switch": "copyright-period",
        "type": "string",
      },
      Object {
        "default": "\\"master\\"",
        "docs": "The name of the main release branch.",
        "name": "defaultReleaseBranch",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "defaultReleaseBranch",
        ],
        "switch": "default-release-branch",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Include dependabot configuration.",
        "name": "dependabot",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "dependabot",
        ],
        "switch": "dependabot",
        "type": "boolean",
      },
      Object {
        "default": "- default options",
        "docs": "Options for dependabot.",
        "name": "dependabotOptions",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "dependabotOptions",
        ],
        "switch": "dependabot-options",
        "type": "DependabotOptions",
      },
      Object {
        "default": "[]",
        "docs": "Runtime dependencies of this module.",
        "name": "deps",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "deps",
        ],
        "switch": "deps",
        "type": "unknown",
      },
      Object {
        "docs": "The description is just a string that helps people understand the purpose of the package.",
        "name": "description",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "description",
        ],
        "switch": "description",
        "type": "string",
      },
      Object {
        "default": "[]",
        "docs": "Build dependencies for this module.",
        "name": "devDeps",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "devDeps",
        ],
        "switch": "dev-deps",
        "type": "unknown",
      },
      Object {
        "default": "false",
        "docs": "Do not generate a \`tsconfig.json\` file (used by jsii projects since tsconfig.json is generated by the jsii compiler).",
        "name": "disableTsconfig",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "disableTsconfig",
        ],
        "switch": "disable-tsconfig",
        "type": "boolean",
      },
      Object {
        "default": "false",
        "docs": "Docgen by Typedoc.",
        "name": "docgen",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "docgen",
        ],
        "switch": "docgen",
        "type": "boolean",
      },
      Object {
        "default": "\\"docs\\"",
        "docs": "Docs directory.",
        "name": "docsDirectory",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "docsDirectory",
        ],
        "switch": "docs-directory",
        "type": "string",
      },
      Object {
        "default": "\\"lib/index.js\\"",
        "docs": "Module entrypoint (\`main\` in \`package.json\`).",
        "name": "entrypoint",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "entrypoint",
        ],
        "switch": "entrypoint",
        "type": "string",
      },
      Object {
        "default": "- .d.ts file derived from the project's entrypoint (usually lib/index.d.ts)",
        "docs": "The .d.ts file that includes the type declarations for this module.",
        "name": "entrypointTypes",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "entrypointTypes",
        ],
        "switch": "entrypoint-types",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Setup eslint.",
        "name": "eslint",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "eslint",
        ],
        "switch": "eslint",
        "type": "boolean",
      },
      Object {
        "default": "- opinionated default options",
        "docs": "Eslint options.",
        "name": "eslintOptions",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "eslintOptions",
        ],
        "switch": "eslint-options",
        "type": "EslintOptions",
      },
      Object {
        "docs": "Additional entries to .gitignore.",
        "name": "gitignore",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "gitignore",
        ],
        "switch": "gitignore",
        "type": "unknown",
      },
      Object {
        "default": "false",
        "docs": "Adds a gitpod configuration.",
        "name": "gitpod",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "gitpod",
        ],
        "switch": "gitpod",
        "type": "boolean",
      },
      Object {
        "docs": "Package's Homepage / Website.",
        "name": "homepage",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "homepage",
        ],
        "switch": "homepage",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Setup jest unit tests.",
        "name": "jest",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "jest",
        ],
        "switch": "jest",
        "type": "boolean",
      },
      Object {
        "default": "- default options",
        "docs": "Jest options.",
        "name": "jestOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "jestOptions",
        ],
        "switch": "jest-options",
        "type": "JestOptions",
      },
      Object {
        "docs": "Keywords to include in \`package.json\`.",
        "name": "keywords",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "keywords",
        ],
        "switch": "keywords",
        "type": "unknown",
      },
      Object {
        "default": "\\"lib\\"",
        "docs": "Compiler artifacts output directory.",
        "name": "libdir",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "libdir",
        ],
        "switch": "libdir",
        "type": "string",
      },
      Object {
        "docs": "License's SPDX identifier.",
        "name": "license",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "license",
        ],
        "switch": "license",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Indicates if a license should be added.",
        "name": "licensed",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "licensed",
        ],
        "switch": "licensed",
        "type": "boolean",
      },
      Object {
        "default": "- no max",
        "docs": "Minimum node.js version to require via \`engines\` (inclusive).",
        "name": "maxNodeVersion",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "maxNodeVersion",
        ],
        "switch": "max-node-version",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Adds mergify configuration.",
        "name": "mergify",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "mergify",
        ],
        "switch": "mergify",
        "type": "boolean",
      },
      Object {
        "default": "\\"auto-merge\\"",
        "docs": "Automatically merge PRs that build successfully and have this label.",
        "name": "mergifyAutoMergeLabel",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "mergifyAutoMergeLabel",
        ],
        "switch": "mergify-auto-merge-label",
        "type": "string",
      },
      Object {
        "default": "- default options",
        "docs": "Options for mergify.",
        "name": "mergifyOptions",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "mergifyOptions",
        ],
        "switch": "mergify-options",
        "type": "MergifyOptions",
      },
      Object {
        "default": "- no \\"engines\\" specified",
        "docs": "Minimum Node.js version to require via package.json \`engines\` (inclusive).",
        "name": "minNodeVersion",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "minNodeVersion",
        ],
        "switch": "min-node-version",
        "type": "string",
      },
      Object {
        "default": "$BASEDIR",
        "docs": "This is the name of your package.",
        "name": "name",
        "parent": "NodeProjectOptions",
        "path": Array [
          "name",
        ],
        "switch": "name",
        "type": "string",
      },
      Object {
        "default": "\\"latest\\"",
        "docs": "The dist-tag to use when releasing to npm.",
        "name": "npmDistTag",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "npmDistTag",
        ],
        "switch": "npm-dist-tag",
        "type": "string",
      },
      Object {
        "docs": "Additional entries to .npmignore.",
        "name": "npmignore",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "npmignore",
        ],
        "switch": "npmignore",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Defines an .npmignore file. Normally this is only needed for libraries that are packaged as tarballs.",
        "name": "npmignoreEnabled",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "npmignoreEnabled",
        ],
        "switch": "npmignore-enabled",
        "type": "boolean",
      },
      Object {
        "default": "\\"registry.npmjs.org\\"",
        "docs": "The registry url to use when releasing packages.",
        "name": "npmRegistry",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "npmRegistry",
        ],
        "switch": "npm-registry",
        "type": "string",
      },
      Object {
        "default": "NpmTaskExecution.PROJEN",
        "docs": "Determines how tasks are executed when invoked as npm scripts (yarn/npm run xyz).",
        "name": "npmTaskExecution",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "npmTaskExecution",
        ],
        "switch": "npm-task-execution",
        "type": "NpmTaskExecution",
      },
      Object {
        "default": "\\".\\"",
        "docs": "The root directory of the project.",
        "name": "outdir",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "outdir",
        ],
        "switch": "outdir",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Defines a \`yarn package\` command that will produce a tarball and place it under \`dist/js\`.",
        "name": "package",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "package",
        ],
        "switch": "package",
        "type": "boolean",
      },
      Object {
        "default": "NodePackageManager.YARN",
        "docs": "The Node Package Manager used to execute scripts.",
        "name": "packageManager",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "packageManager",
        ],
        "switch": "package-manager",
        "type": "NodePackageManager",
      },
      Object {
        "docs": "The parent project, if this project is part of a bigger project.",
        "name": "parent",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "parent",
        ],
        "switch": "parent",
        "type": "Project",
      },
      Object {
        "docs": "Options for \`peerDeps\`.",
        "name": "peerDependencyOptions",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "peerDependencyOptions",
        ],
        "switch": "peer-dependency-options",
        "type": "PeerDependencyOptions",
      },
      Object {
        "default": "[]",
        "docs": "Peer dependencies for this module.",
        "name": "peerDeps",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "peerDeps",
        ],
        "switch": "peer-deps",
        "type": "unknown",
      },
      Object {
        "default": "ProjectType.UNKNOWN",
        "docs": "Which type of project this is (library/app).",
        "name": "projectType",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "projectType",
        ],
        "switch": "project-type",
        "type": "ProjectType",
      },
      Object {
        "default": "\\"npx projen\\"",
        "docs": "The shell command to use in order to run the projen CLI.",
        "name": "projenCommand",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenCommand",
        ],
        "switch": "projen-command",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Indicates of \\"projen\\" should be installed as a devDependency.",
        "name": "projenDevDependency",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenDevDependency",
        ],
        "switch": "projen-dev-dependency",
        "type": "boolean",
      },
      Object {
        "default": "- \\"true\\" if mergify auto-merge is enabled (default)",
        "docs": "Automatically merge projen upgrade PRs when build passes.",
        "name": "projenUpgradeAutoMerge",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenUpgradeAutoMerge",
        ],
        "switch": "projen-upgrade-auto-merge",
        "type": "boolean",
      },
      Object {
        "default": "[ \\"0 6 * * *\\" ]",
        "docs": "Customize the projenUpgrade schedule in cron expression.",
        "name": "projenUpgradeSchedule",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenUpgradeSchedule",
        ],
        "switch": "projen-upgrade-schedule",
        "type": "unknown",
      },
      Object {
        "default": "- no automatic projen upgrade pull requests",
        "docs": "Periodically submits a pull request for projen upgrades (executes \`yarn projen:upgrade\`).",
        "name": "projenUpgradeSecret",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenUpgradeSecret",
        ],
        "switch": "projen-upgrade-secret",
        "type": "string",
      },
      Object {
        "default": "Semver.latest()",
        "docs": "Version of projen to install.",
        "name": "projenVersion",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenVersion",
        ],
        "switch": "projen-version",
        "type": "Semver",
      },
      Object {
        "default": "true",
        "docs": "Include a GitHub pull request template.",
        "name": "pullRequestTemplate",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "pullRequestTemplate",
        ],
        "switch": "pull-request-template",
        "type": "boolean",
      },
      Object {
        "default": "- default content",
        "docs": "The contents of the pull request template.",
        "name": "pullRequestTemplateContents",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "pullRequestTemplateContents",
        ],
        "switch": "pull-request-template-contents",
        "type": "string",
      },
      Object {
        "name": "readme",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "readme",
        ],
        "switch": "readme",
        "type": "string",
      },
      Object {
        "default": "- true if not a subproject",
        "docs": "Installs a GitHub workflow which is triggered when the comment \\"@projen rebuild\\" is added to a pull request.",
        "name": "rebuildBot",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "rebuildBot",
        ],
        "switch": "rebuild-bot",
        "type": "boolean",
      },
      Object {
        "default": "\\"rebuild\\"",
        "docs": "The pull request bot command to use in order to trigger a rebuild and commit of the contents of the branch.",
        "name": "rebuildBotCommand",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "rebuildBotCommand",
        ],
        "switch": "rebuild-bot-command",
        "type": "string",
      },
      Object {
        "default": "[ \\"master\\" ]",
        "docs": "Branches which trigger a release.",
        "name": "releaseBranches",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "releaseBranches",
        ],
        "switch": "release-branches",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Automatically release new versions every commit to one of branches in \`releaseBranches\`.",
        "name": "releaseEveryCommit",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "releaseEveryCommit",
        ],
        "switch": "release-every-commit",
        "type": "boolean",
      },
      Object {
        "default": "- no scheduled releases",
        "docs": "CRON schedule to trigger new releases.",
        "name": "releaseSchedule",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "releaseSchedule",
        ],
        "switch": "release-schedule",
        "type": "string",
      },
      Object {
        "default": "false",
        "docs": "Automatically release to npm when new versions are introduced.",
        "name": "releaseToNpm",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "releaseToNpm",
        ],
        "switch": "release-to-npm",
        "type": "boolean",
      },
      Object {
        "default": "- true if not a subproject",
        "docs": "Define a GitHub workflow for releasing from \\"master\\" when new versions are bumped.",
        "name": "releaseWorkflow",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "releaseWorkflow",
        ],
        "switch": "release-workflow",
        "type": "boolean",
      },
      Object {
        "docs": "The repository is the location where the actual code for your package lives.",
        "name": "repository",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "repository",
        ],
        "switch": "repository",
        "type": "string",
      },
      Object {
        "docs": "If the package.json for your package is not in the root directory (for example if it is part of a monorepo), you can specify the directory in which it lives.",
        "name": "repositoryDirectory",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "repositoryDirectory",
        ],
        "switch": "repository-directory",
        "type": "string",
      },
      Object {
        "default": "CdkApprovalLevel.BROADENING",
        "docs": "To protect you against unintended changes that affect your security posture, the AWS CDK Toolkit prompts you to approve security-related changes before deploying them.",
        "name": "requireApproval",
        "optional": true,
        "parent": "AwsCdkTypeScriptAppOptions",
        "path": Array [
          "requireApproval",
        ],
        "switch": "require-approval",
        "type": "CdkApprovalLevel",
      },
      Object {
        "default": "true",
        "docs": "Generate one-time sample in \`src/\` and \`test/\` if there are no files there.",
        "name": "sampleCode",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "sampleCode",
        ],
        "switch": "sample-code",
        "type": "boolean",
      },
      Object {
        "default": "{}",
        "docs": "npm scripts to include.",
        "name": "scripts",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "scripts",
        ],
        "switch": "scripts",
        "type": "unknown",
      },
      Object {
        "default": "\\"src\\"",
        "docs": "Typescript sources directory.",
        "name": "srcdir",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "srcdir",
        ],
        "switch": "srcdir",
        "type": "string",
      },
      Object {
        "docs": "Package's Stability.",
        "name": "stability",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "stability",
        ],
        "switch": "stability",
        "type": "string",
      },
      Object {
        "default": "\\"test\\"",
        "docs": "Tests directory.",
        "name": "testdir",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "testdir",
        ],
        "switch": "testdir",
        "type": "string",
      },
      Object {
        "docs": "Custom TSConfig.",
        "name": "tsconfig",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "tsconfig",
        ],
        "switch": "tsconfig",
        "type": "TypescriptConfigOptions",
      },
      Object {
        "default": "\\"^3.9.5\\"",
        "docs": "TypeScript version to use.",
        "name": "typescriptVersion",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "typescriptVersion",
        ],
        "switch": "typescript-version",
        "type": "string",
      },
      Object {
        "default": "\\"yarn install --frozen-lockfile && yarn projen\\"",
        "docs": "Workflow steps to use in order to bootstrap this repo.",
        "name": "workflowBootstrapSteps",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "workflowBootstrapSteps",
        ],
        "switch": "workflow-bootstrap-steps",
        "type": "unknown",
      },
      Object {
        "default": "- default image",
        "docs": "Container image to use for GitHub workflows.",
        "name": "workflowContainerImage",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "workflowContainerImage",
        ],
        "switch": "workflow-container-image",
        "type": "string",
      },
      Object {
        "default": "- same as \`minNodeVersion\`",
        "docs": "The node version to use in GitHub workflows.",
        "name": "workflowNodeVersion",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "workflowNodeVersion",
        ],
        "switch": "workflow-node-version",
        "type": "string",
      },
    ],
    "pjid": "awscdk-app-ts",
    "typename": "AwsCdkTypeScriptApp",
  },
  Object {
    "docs": "AWS CDK construct library project.",
    "docsurl": "https://github.com/projen/projen/blob/master/API.md#projen-awscdkconstructlibrary",
    "fqn": "projen.AwsCdkConstructLibrary",
    "moduleName": "projen",
    "options": Array [
      Object {
        "default": "true",
        "docs": "Allow the project to include \`peerDependencies\` and \`bundledDependencies\`.",
        "name": "allowLibraryDependencies",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "allowLibraryDependencies",
        ],
        "switch": "allow-library-dependencies",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Checks that after build there are no modified files on git.",
        "name": "antitamper",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "antitamper",
        ],
        "switch": "antitamper",
        "type": "boolean",
      },
      Object {
        "default": "$GIT_USER_EMAIL",
        "docs": "Email or URL of the library author.",
        "name": "authorAddress",
        "parent": "JsiiProjectOptions",
        "path": Array [
          "authorAddress",
        ],
        "switch": "author-address",
        "type": "string",
      },
      Object {
        "deprecated": true,
        "name": "authorEmail",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "authorEmail",
        ],
        "switch": "author-email",
        "type": "string",
      },
      Object {
        "default": "$GIT_USER_NAME",
        "docs": "The name of the library author.",
        "name": "authorName",
        "parent": "JsiiProjectOptions",
        "path": Array [
          "authorName",
        ],
        "switch": "author-name",
        "type": "string",
      },
      Object {
        "name": "authorOrganization",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "authorOrganization",
        ],
        "switch": "author-organization",
        "type": "boolean",
      },
      Object {
        "deprecated": true,
        "name": "authorUrl",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "authorUrl",
        ],
        "switch": "author-url",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Automatically add all executables under the \`bin\` directory to your \`package.json\` file under the \`bin\` section.",
        "name": "autoDetectBin",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "autoDetectBin",
        ],
        "switch": "auto-detect-bin",
        "type": "boolean",
      },
      Object {
        "docs": "Binary programs vended with your module.",
        "name": "bin",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "bin",
        ],
        "switch": "bin",
        "type": "unknown",
      },
      Object {
        "default": "- true if not a subproject",
        "docs": "Define a GitHub workflow for building PRs.",
        "name": "buildWorkflow",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "buildWorkflow",
        ],
        "switch": "build-workflow",
        "type": "boolean",
      },
      Object {
        "docs": "List of dependencies to bundle into this module.",
        "name": "bundledDeps",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "bundledDeps",
        ],
        "switch": "bundled-deps",
        "type": "unknown",
      },
      Object {
        "default": "- new version will be announced",
        "docs": "Libraries will be picked up by the construct catalog when they are published to npm as jsii modules and will be published under:.",
        "name": "catalog",
        "optional": true,
        "parent": "ConstructLibraryOptions",
        "path": Array [
          "catalog",
        ],
        "switch": "catalog",
        "type": "Catalog",
      },
      Object {
        "default": "true",
        "docs": "Install the @aws-cdk/assert library?",
        "name": "cdkAssert",
        "optional": true,
        "parent": "AwsCdkConstructLibraryOptions",
        "path": Array [
          "cdkAssert",
        ],
        "switch": "cdk-assert",
        "type": "boolean",
      },
      Object {
        "docs": "Which AWS CDK modules (those that start with \\"@aws-cdk/\\") does this library require when consumed?",
        "name": "cdkDependencies",
        "optional": true,
        "parent": "AwsCdkConstructLibraryOptions",
        "path": Array [
          "cdkDependencies",
        ],
        "switch": "cdk-dependencies",
        "type": "unknown",
      },
      Object {
        "docs": "AWS CDK modules required for testing.",
        "name": "cdkTestDependencies",
        "optional": true,
        "parent": "AwsCdkConstructLibraryOptions",
        "path": Array [
          "cdkTestDependencies",
        ],
        "switch": "cdk-test-dependencies",
        "type": "unknown",
      },
      Object {
        "default": "\\"1.73.0\\"",
        "docs": "Minimum target version this library is tested against.",
        "name": "cdkVersion",
        "parent": "AwsCdkConstructLibraryOptions",
        "path": Array [
          "cdkVersion",
        ],
        "switch": "cdk-version",
        "type": "string",
      },
      Object {
        "default": "false",
        "docs": "Use pinned version instead of caret version for CDK.",
        "name": "cdkVersionPinning",
        "optional": true,
        "parent": "AwsCdkConstructLibraryOptions",
        "path": Array [
          "cdkVersionPinning",
        ],
        "switch": "cdk-version-pinning",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Add a \`clobber\` task which resets the repo to origin.",
        "name": "clobber",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "clobber",
        ],
        "switch": "clobber",
        "type": "boolean",
      },
      Object {
        "default": "false",
        "docs": "Define a GitHub workflow step for sending code coverage metrics to https://codecov.io/ Uses codecov/codecov-action@v1 A secret is required for private repos. Configured with @codeCovTokenSecret.",
        "name": "codeCov",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "codeCov",
        ],
        "switch": "code-cov",
        "type": "boolean",
      },
      Object {
        "default": "- if this option is not specified, only public repositories are supported",
        "docs": "Define the secret name for a specified https://codecov.io/ token A secret is required to send coverage for private repositories.",
        "name": "codeCovTokenSecret",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "codeCovTokenSecret",
        ],
        "switch": "code-cov-token-secret",
        "type": "string",
      },
      Object {
        "default": "false",
        "docs": "Automatically run API compatibility test against the latest version published to npm after compilation.",
        "name": "compat",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "compat",
        ],
        "switch": "compat",
        "type": "boolean",
      },
      Object {
        "default": "\\".compatignore\\"",
        "docs": "Name of the ignore file for API compatibility tests.",
        "name": "compatIgnore",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "compatIgnore",
        ],
        "switch": "compat-ignore",
        "type": "string",
      },
      Object {
        "default": "- defaults to the value of authorName or \\"\\" if \`authorName\` is undefined.",
        "docs": "License copyright owner.",
        "name": "copyrightOwner",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "copyrightOwner",
        ],
        "switch": "copyright-owner",
        "type": "string",
      },
      Object {
        "default": "- current year",
        "docs": "The copyright years to put in the LICENSE file.",
        "name": "copyrightPeriod",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "copyrightPeriod",
        ],
        "switch": "copyright-period",
        "type": "string",
      },
      Object {
        "default": "\\"master\\"",
        "docs": "The name of the main release branch.",
        "name": "defaultReleaseBranch",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "defaultReleaseBranch",
        ],
        "switch": "default-release-branch",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Include dependabot configuration.",
        "name": "dependabot",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "dependabot",
        ],
        "switch": "dependabot",
        "type": "boolean",
      },
      Object {
        "default": "- default options",
        "docs": "Options for dependabot.",
        "name": "dependabotOptions",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "dependabotOptions",
        ],
        "switch": "dependabot-options",
        "type": "DependabotOptions",
      },
      Object {
        "default": "[]",
        "docs": "Runtime dependencies of this module.",
        "name": "deps",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "deps",
        ],
        "switch": "deps",
        "type": "unknown",
      },
      Object {
        "docs": "Library description.",
        "name": "description",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "description",
        ],
        "switch": "description",
        "type": "string",
      },
      Object {
        "default": "[]",
        "docs": "Build dependencies for this module.",
        "name": "devDeps",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "devDeps",
        ],
        "switch": "dev-deps",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Automatically generate API.md from jsii.",
        "name": "docgen",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "docgen",
        ],
        "switch": "docgen",
        "type": "boolean",
      },
      Object {
        "name": "dotnet",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "dotnet",
        ],
        "switch": "dotnet",
        "type": "JsiiDotNetTarget",
      },
      Object {
        "default": "\\"lib/index.js\\"",
        "docs": "Module entrypoint (\`main\` in \`package.json\`).",
        "name": "entrypoint",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "entrypoint",
        ],
        "switch": "entrypoint",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Install eslint.",
        "name": "eslint",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "eslint",
        ],
        "switch": "eslint",
        "type": "boolean",
      },
      Object {
        "default": "false",
        "docs": "Adds a gitpod configuration.",
        "name": "gitpod",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "gitpod",
        ],
        "switch": "gitpod",
        "type": "boolean",
      },
      Object {
        "name": "java",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "java",
        ],
        "switch": "java",
        "type": "JsiiJavaTarget",
      },
      Object {
        "default": "true",
        "docs": "Use jest for unit tests.",
        "name": "jest",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "jest",
        ],
        "switch": "jest",
        "type": "boolean",
      },
      Object {
        "default": "- defaults",
        "docs": "Jest options.",
        "name": "jestOptions",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "jestOptions",
        ],
        "switch": "jest-options",
        "type": "JestOptions",
      },
      Object {
        "docs": "Keywords to include in \`package.json\`.",
        "name": "keywords",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "keywords",
        ],
        "switch": "keywords",
        "type": "unknown",
      },
      Object {
        "default": "\\"lib\\"",
        "docs": "Compiler artifacts output directory.",
        "name": "libdir",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "libdir",
        ],
        "switch": "libdir",
        "type": "string",
      },
      Object {
        "name": "license",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "license",
        ],
        "switch": "license",
        "type": "string",
      },
      Object {
        "default": "- no max",
        "docs": "Minimum node.js version to require via \`engines\` (inclusive).",
        "name": "maxNodeVersion",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "maxNodeVersion",
        ],
        "switch": "max-node-version",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Adds mergify configuration.",
        "name": "mergify",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "mergify",
        ],
        "switch": "mergify",
        "type": "boolean",
      },
      Object {
        "default": "\\"auto-merge\\"",
        "docs": "Automatically merge PRs that build successfully and have this label.",
        "name": "mergifyAutoMergeLabel",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "mergifyAutoMergeLabel",
        ],
        "switch": "mergify-auto-merge-label",
        "type": "string",
      },
      Object {
        "default": "- default options",
        "docs": "Options for mergify.",
        "name": "mergifyOptions",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "mergifyOptions",
        ],
        "switch": "mergify-options",
        "type": "MergifyOptions",
      },
      Object {
        "default": "- no \\"engines\\" specified",
        "docs": "Minimum Node.js version to require via package.json \`engines\` (inclusive).",
        "name": "minNodeVersion",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "minNodeVersion",
        ],
        "switch": "min-node-version",
        "type": "string",
      },
      Object {
        "default": "$BASEDIR",
        "docs": "The name of the library.",
        "name": "name",
        "parent": "JsiiProjectOptions",
        "path": Array [
          "name",
        ],
        "switch": "name",
        "type": "string",
      },
      Object {
        "default": "\\"latest\\"",
        "docs": "The dist-tag to use when releasing to npm.",
        "name": "npmDistTag",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "npmDistTag",
        ],
        "switch": "npm-dist-tag",
        "type": "string",
      },
      Object {
        "docs": "Additional entries to .npmignore.",
        "name": "npmignore",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "npmignore",
        ],
        "switch": "npmignore",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Defines an .npmignore file. Normally this is only needed for libraries that are packaged as tarballs.",
        "name": "npmignoreEnabled",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "npmignoreEnabled",
        ],
        "switch": "npmignore-enabled",
        "type": "boolean",
      },
      Object {
        "default": "\\"registry.npmjs.org\\"",
        "docs": "The registry url to use when releasing packages.",
        "name": "npmRegistry",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "npmRegistry",
        ],
        "switch": "npm-registry",
        "type": "string",
      },
      Object {
        "default": "NpmTaskExecution.PROJEN",
        "docs": "Determines how tasks are executed when invoked as npm scripts (yarn/npm run xyz).",
        "name": "npmTaskExecution",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "npmTaskExecution",
        ],
        "switch": "npm-task-execution",
        "type": "NpmTaskExecution",
      },
      Object {
        "default": "\\".\\"",
        "docs": "The root directory of the project.",
        "name": "outdir",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "outdir",
        ],
        "switch": "outdir",
        "type": "string",
      },
      Object {
        "default": "NodePackageManager.YARN",
        "docs": "The Node Package Manager used to execute scripts.",
        "name": "packageManager",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "packageManager",
        ],
        "switch": "package-manager",
        "type": "NodePackageManager",
      },
      Object {
        "docs": "The parent project, if this project is part of a bigger project.",
        "name": "parent",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "parent",
        ],
        "switch": "parent",
        "type": "Project",
      },
      Object {
        "docs": "Options for \`peerDeps\`.",
        "name": "peerDependencyOptions",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "peerDependencyOptions",
        ],
        "switch": "peer-dependency-options",
        "type": "PeerDependencyOptions",
      },
      Object {
        "default": "[]",
        "docs": "Peer dependencies for this module.",
        "name": "peerDeps",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "peerDeps",
        ],
        "switch": "peer-deps",
        "type": "unknown",
      },
      Object {
        "default": "ProjectType.UNKNOWN",
        "docs": "Which type of project this is (library/app).",
        "name": "projectType",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "projectType",
        ],
        "switch": "project-type",
        "type": "ProjectType",
      },
      Object {
        "default": "\\"npx projen\\"",
        "docs": "The shell command to use in order to run the projen CLI.",
        "name": "projenCommand",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenCommand",
        ],
        "switch": "projen-command",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Indicates of \\"projen\\" should be installed as a devDependency.",
        "name": "projenDevDependency",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenDevDependency",
        ],
        "switch": "projen-dev-dependency",
        "type": "boolean",
      },
      Object {
        "default": "- \\"true\\" if mergify auto-merge is enabled (default)",
        "docs": "Automatically merge projen upgrade PRs when build passes.",
        "name": "projenUpgradeAutoMerge",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenUpgradeAutoMerge",
        ],
        "switch": "projen-upgrade-auto-merge",
        "type": "boolean",
      },
      Object {
        "default": "[ \\"0 6 * * *\\" ]",
        "docs": "Customize the projenUpgrade schedule in cron expression.",
        "name": "projenUpgradeSchedule",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenUpgradeSchedule",
        ],
        "switch": "projen-upgrade-schedule",
        "type": "unknown",
      },
      Object {
        "default": "- no automatic projen upgrade pull requests",
        "docs": "Periodically submits a pull request for projen upgrades (executes \`yarn projen:upgrade\`).",
        "name": "projenUpgradeSecret",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenUpgradeSecret",
        ],
        "switch": "projen-upgrade-secret",
        "type": "string",
      },
      Object {
        "default": "Semver.latest()",
        "docs": "Version of projen to install.",
        "name": "projenVersion",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenVersion",
        ],
        "switch": "projen-version",
        "type": "Semver",
      },
      Object {
        "default": "true",
        "docs": "Include a GitHub pull request template.",
        "name": "pullRequestTemplate",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "pullRequestTemplate",
        ],
        "switch": "pull-request-template",
        "type": "boolean",
      },
      Object {
        "default": "- default content",
        "docs": "The contents of the pull request template.",
        "name": "pullRequestTemplateContents",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "pullRequestTemplateContents",
        ],
        "switch": "pull-request-template-contents",
        "type": "string",
      },
      Object {
        "name": "python",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "python",
        ],
        "switch": "python",
        "type": "JsiiPythonTarget",
      },
      Object {
        "name": "readme",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "readme",
        ],
        "switch": "readme",
        "type": "string",
      },
      Object {
        "default": "- true if not a subproject",
        "docs": "Installs a GitHub workflow which is triggered when the comment \\"@projen rebuild\\" is added to a pull request.",
        "name": "rebuildBot",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "rebuildBot",
        ],
        "switch": "rebuild-bot",
        "type": "boolean",
      },
      Object {
        "default": "\\"rebuild\\"",
        "docs": "The pull request bot command to use in order to trigger a rebuild and commit of the contents of the branch.",
        "name": "rebuildBotCommand",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "rebuildBotCommand",
        ],
        "switch": "rebuild-bot-command",
        "type": "string",
      },
      Object {
        "default": "[ \\"master\\" ]",
        "docs": "Branches which trigger a release.",
        "name": "releaseBranches",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "releaseBranches",
        ],
        "switch": "release-branches",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Automatically release new versions every commit to one of branches in \`releaseBranches\`.",
        "name": "releaseEveryCommit",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "releaseEveryCommit",
        ],
        "switch": "release-every-commit",
        "type": "boolean",
      },
      Object {
        "default": "- no scheduled releases",
        "docs": "CRON schedule to trigger new releases.",
        "name": "releaseSchedule",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "releaseSchedule",
        ],
        "switch": "release-schedule",
        "type": "string",
      },
      Object {
        "default": "false",
        "docs": "Automatically release to npm when new versions are introduced.",
        "name": "releaseToNpm",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "releaseToNpm",
        ],
        "switch": "release-to-npm",
        "type": "boolean",
      },
      Object {
        "default": "- true if not a subproject",
        "docs": "Define a GitHub workflow for releasing from \\"master\\" when new versions are bumped.",
        "name": "releaseWorkflow",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "releaseWorkflow",
        ],
        "switch": "release-workflow",
        "type": "boolean",
      },
      Object {
        "default": "$GIT_REMOTE",
        "docs": "Git repository URL.",
        "name": "repository",
        "parent": "JsiiProjectOptions",
        "path": Array [
          "repository",
        ],
        "switch": "repository",
        "type": "string",
      },
      Object {
        "default": "\\".\\"",
        "name": "rootdir",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "rootdir",
        ],
        "switch": "rootdir",
        "type": "string",
      },
      Object {
        "default": "{}",
        "docs": "npm scripts to include.",
        "name": "scripts",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "scripts",
        ],
        "switch": "scripts",
        "type": "unknown",
      },
      Object {
        "default": "\\"src\\"",
        "docs": "Typescript sources directory.",
        "name": "srcdir",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "srcdir",
        ],
        "switch": "srcdir",
        "type": "string",
      },
      Object {
        "name": "stability",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "stability",
        ],
        "switch": "stability",
        "type": "string",
      },
      Object {
        "default": "\\"test\\"",
        "docs": "Tests directory.",
        "name": "testdir",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "testdir",
        ],
        "switch": "testdir",
        "type": "string",
      },
      Object {
        "default": "\\"yarn install --frozen-lockfile && yarn projen\\"",
        "docs": "Workflow steps to use in order to bootstrap this repo.",
        "name": "workflowBootstrapSteps",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "workflowBootstrapSteps",
        ],
        "switch": "workflow-bootstrap-steps",
        "type": "unknown",
      },
      Object {
        "default": "- default image",
        "docs": "Container image to use for GitHub workflows.",
        "name": "workflowContainerImage",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "workflowContainerImage",
        ],
        "switch": "workflow-container-image",
        "type": "string",
      },
      Object {
        "default": "- same as \`minNodeVersion\`",
        "docs": "The node version to use in GitHub workflows.",
        "name": "workflowNodeVersion",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "workflowNodeVersion",
        ],
        "switch": "workflow-node-version",
        "type": "string",
      },
    ],
    "pjid": "awscdk-construct",
    "typename": "AwsCdkConstructLibrary",
  },
  Object {
    "docs": "CDK8s construct library project.",
    "docsurl": "https://github.com/projen/projen/blob/master/API.md#projen-constructlibrarycdk8s",
    "fqn": "projen.ConstructLibraryCdk8s",
    "moduleName": "projen",
    "options": Array [
      Object {
        "default": "true",
        "docs": "Allow the project to include \`peerDependencies\` and \`bundledDependencies\`.",
        "name": "allowLibraryDependencies",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "allowLibraryDependencies",
        ],
        "switch": "allow-library-dependencies",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Checks that after build there are no modified files on git.",
        "name": "antitamper",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "antitamper",
        ],
        "switch": "antitamper",
        "type": "boolean",
      },
      Object {
        "default": "$GIT_USER_EMAIL",
        "docs": "Email or URL of the library author.",
        "name": "authorAddress",
        "parent": "JsiiProjectOptions",
        "path": Array [
          "authorAddress",
        ],
        "switch": "author-address",
        "type": "string",
      },
      Object {
        "deprecated": true,
        "name": "authorEmail",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "authorEmail",
        ],
        "switch": "author-email",
        "type": "string",
      },
      Object {
        "default": "$GIT_USER_NAME",
        "docs": "The name of the library author.",
        "name": "authorName",
        "parent": "JsiiProjectOptions",
        "path": Array [
          "authorName",
        ],
        "switch": "author-name",
        "type": "string",
      },
      Object {
        "name": "authorOrganization",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "authorOrganization",
        ],
        "switch": "author-organization",
        "type": "boolean",
      },
      Object {
        "deprecated": true,
        "name": "authorUrl",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "authorUrl",
        ],
        "switch": "author-url",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Automatically add all executables under the \`bin\` directory to your \`package.json\` file under the \`bin\` section.",
        "name": "autoDetectBin",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "autoDetectBin",
        ],
        "switch": "auto-detect-bin",
        "type": "boolean",
      },
      Object {
        "docs": "Binary programs vended with your module.",
        "name": "bin",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "bin",
        ],
        "switch": "bin",
        "type": "unknown",
      },
      Object {
        "default": "- true if not a subproject",
        "docs": "Define a GitHub workflow for building PRs.",
        "name": "buildWorkflow",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "buildWorkflow",
        ],
        "switch": "build-workflow",
        "type": "boolean",
      },
      Object {
        "docs": "List of dependencies to bundle into this module.",
        "name": "bundledDeps",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "bundledDeps",
        ],
        "switch": "bundled-deps",
        "type": "unknown",
      },
      Object {
        "default": "- new version will be announced",
        "docs": "Libraries will be picked up by the construct catalog when they are published to npm as jsii modules and will be published under:.",
        "name": "catalog",
        "optional": true,
        "parent": "ConstructLibraryOptions",
        "path": Array [
          "catalog",
        ],
        "switch": "catalog",
        "type": "Catalog",
      },
      Object {
        "default": "\\"1.0.0-beta.3\\"",
        "docs": "Minimum target version this library is tested against.",
        "name": "cdk8sVersion",
        "parent": "ConstructLibraryCdk8sOptions",
        "path": Array [
          "cdk8sVersion",
        ],
        "switch": "cdk8s-version",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Add a \`clobber\` task which resets the repo to origin.",
        "name": "clobber",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "clobber",
        ],
        "switch": "clobber",
        "type": "boolean",
      },
      Object {
        "default": "false",
        "docs": "Define a GitHub workflow step for sending code coverage metrics to https://codecov.io/ Uses codecov/codecov-action@v1 A secret is required for private repos. Configured with @codeCovTokenSecret.",
        "name": "codeCov",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "codeCov",
        ],
        "switch": "code-cov",
        "type": "boolean",
      },
      Object {
        "default": "- if this option is not specified, only public repositories are supported",
        "docs": "Define the secret name for a specified https://codecov.io/ token A secret is required to send coverage for private repositories.",
        "name": "codeCovTokenSecret",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "codeCovTokenSecret",
        ],
        "switch": "code-cov-token-secret",
        "type": "string",
      },
      Object {
        "default": "false",
        "docs": "Automatically run API compatibility test against the latest version published to npm after compilation.",
        "name": "compat",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "compat",
        ],
        "switch": "compat",
        "type": "boolean",
      },
      Object {
        "default": "\\".compatignore\\"",
        "docs": "Name of the ignore file for API compatibility tests.",
        "name": "compatIgnore",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "compatIgnore",
        ],
        "switch": "compat-ignore",
        "type": "string",
      },
      Object {
        "default": "- defaults to the value of authorName or \\"\\" if \`authorName\` is undefined.",
        "docs": "License copyright owner.",
        "name": "copyrightOwner",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "copyrightOwner",
        ],
        "switch": "copyright-owner",
        "type": "string",
      },
      Object {
        "default": "- current year",
        "docs": "The copyright years to put in the LICENSE file.",
        "name": "copyrightPeriod",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "copyrightPeriod",
        ],
        "switch": "copyright-period",
        "type": "string",
      },
      Object {
        "default": "\\"master\\"",
        "docs": "The name of the main release branch.",
        "name": "defaultReleaseBranch",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "defaultReleaseBranch",
        ],
        "switch": "default-release-branch",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Include dependabot configuration.",
        "name": "dependabot",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "dependabot",
        ],
        "switch": "dependabot",
        "type": "boolean",
      },
      Object {
        "default": "- default options",
        "docs": "Options for dependabot.",
        "name": "dependabotOptions",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "dependabotOptions",
        ],
        "switch": "dependabot-options",
        "type": "DependabotOptions",
      },
      Object {
        "default": "[]",
        "docs": "Runtime dependencies of this module.",
        "name": "deps",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "deps",
        ],
        "switch": "deps",
        "type": "unknown",
      },
      Object {
        "docs": "Library description.",
        "name": "description",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "description",
        ],
        "switch": "description",
        "type": "string",
      },
      Object {
        "default": "[]",
        "docs": "Build dependencies for this module.",
        "name": "devDeps",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "devDeps",
        ],
        "switch": "dev-deps",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Automatically generate API.md from jsii.",
        "name": "docgen",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "docgen",
        ],
        "switch": "docgen",
        "type": "boolean",
      },
      Object {
        "name": "dotnet",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "dotnet",
        ],
        "switch": "dotnet",
        "type": "JsiiDotNetTarget",
      },
      Object {
        "default": "\\"lib/index.js\\"",
        "docs": "Module entrypoint (\`main\` in \`package.json\`).",
        "name": "entrypoint",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "entrypoint",
        ],
        "switch": "entrypoint",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Install eslint.",
        "name": "eslint",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "eslint",
        ],
        "switch": "eslint",
        "type": "boolean",
      },
      Object {
        "default": "false",
        "docs": "Adds a gitpod configuration.",
        "name": "gitpod",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "gitpod",
        ],
        "switch": "gitpod",
        "type": "boolean",
      },
      Object {
        "name": "java",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "java",
        ],
        "switch": "java",
        "type": "JsiiJavaTarget",
      },
      Object {
        "default": "true",
        "docs": "Use jest for unit tests.",
        "name": "jest",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "jest",
        ],
        "switch": "jest",
        "type": "boolean",
      },
      Object {
        "default": "- defaults",
        "docs": "Jest options.",
        "name": "jestOptions",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "jestOptions",
        ],
        "switch": "jest-options",
        "type": "JestOptions",
      },
      Object {
        "docs": "Keywords to include in \`package.json\`.",
        "name": "keywords",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "keywords",
        ],
        "switch": "keywords",
        "type": "unknown",
      },
      Object {
        "default": "\\"lib\\"",
        "docs": "Compiler artifacts output directory.",
        "name": "libdir",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "libdir",
        ],
        "switch": "libdir",
        "type": "string",
      },
      Object {
        "name": "license",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "license",
        ],
        "switch": "license",
        "type": "string",
      },
      Object {
        "default": "- no max",
        "docs": "Minimum node.js version to require via \`engines\` (inclusive).",
        "name": "maxNodeVersion",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "maxNodeVersion",
        ],
        "switch": "max-node-version",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Adds mergify configuration.",
        "name": "mergify",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "mergify",
        ],
        "switch": "mergify",
        "type": "boolean",
      },
      Object {
        "default": "\\"auto-merge\\"",
        "docs": "Automatically merge PRs that build successfully and have this label.",
        "name": "mergifyAutoMergeLabel",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "mergifyAutoMergeLabel",
        ],
        "switch": "mergify-auto-merge-label",
        "type": "string",
      },
      Object {
        "default": "- default options",
        "docs": "Options for mergify.",
        "name": "mergifyOptions",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "mergifyOptions",
        ],
        "switch": "mergify-options",
        "type": "MergifyOptions",
      },
      Object {
        "default": "- no \\"engines\\" specified",
        "docs": "Minimum Node.js version to require via package.json \`engines\` (inclusive).",
        "name": "minNodeVersion",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "minNodeVersion",
        ],
        "switch": "min-node-version",
        "type": "string",
      },
      Object {
        "default": "$BASEDIR",
        "docs": "The name of the library.",
        "name": "name",
        "parent": "JsiiProjectOptions",
        "path": Array [
          "name",
        ],
        "switch": "name",
        "type": "string",
      },
      Object {
        "default": "\\"latest\\"",
        "docs": "The dist-tag to use when releasing to npm.",
        "name": "npmDistTag",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "npmDistTag",
        ],
        "switch": "npm-dist-tag",
        "type": "string",
      },
      Object {
        "docs": "Additional entries to .npmignore.",
        "name": "npmignore",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "npmignore",
        ],
        "switch": "npmignore",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Defines an .npmignore file. Normally this is only needed for libraries that are packaged as tarballs.",
        "name": "npmignoreEnabled",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "npmignoreEnabled",
        ],
        "switch": "npmignore-enabled",
        "type": "boolean",
      },
      Object {
        "default": "\\"registry.npmjs.org\\"",
        "docs": "The registry url to use when releasing packages.",
        "name": "npmRegistry",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "npmRegistry",
        ],
        "switch": "npm-registry",
        "type": "string",
      },
      Object {
        "default": "NpmTaskExecution.PROJEN",
        "docs": "Determines how tasks are executed when invoked as npm scripts (yarn/npm run xyz).",
        "name": "npmTaskExecution",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "npmTaskExecution",
        ],
        "switch": "npm-task-execution",
        "type": "NpmTaskExecution",
      },
      Object {
        "default": "\\".\\"",
        "docs": "The root directory of the project.",
        "name": "outdir",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "outdir",
        ],
        "switch": "outdir",
        "type": "string",
      },
      Object {
        "default": "NodePackageManager.YARN",
        "docs": "The Node Package Manager used to execute scripts.",
        "name": "packageManager",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "packageManager",
        ],
        "switch": "package-manager",
        "type": "NodePackageManager",
      },
      Object {
        "docs": "The parent project, if this project is part of a bigger project.",
        "name": "parent",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "parent",
        ],
        "switch": "parent",
        "type": "Project",
      },
      Object {
        "docs": "Options for \`peerDeps\`.",
        "name": "peerDependencyOptions",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "peerDependencyOptions",
        ],
        "switch": "peer-dependency-options",
        "type": "PeerDependencyOptions",
      },
      Object {
        "default": "[]",
        "docs": "Peer dependencies for this module.",
        "name": "peerDeps",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "peerDeps",
        ],
        "switch": "peer-deps",
        "type": "unknown",
      },
      Object {
        "default": "ProjectType.UNKNOWN",
        "docs": "Which type of project this is (library/app).",
        "name": "projectType",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "projectType",
        ],
        "switch": "project-type",
        "type": "ProjectType",
      },
      Object {
        "default": "\\"npx projen\\"",
        "docs": "The shell command to use in order to run the projen CLI.",
        "name": "projenCommand",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenCommand",
        ],
        "switch": "projen-command",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Indicates of \\"projen\\" should be installed as a devDependency.",
        "name": "projenDevDependency",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenDevDependency",
        ],
        "switch": "projen-dev-dependency",
        "type": "boolean",
      },
      Object {
        "default": "- \\"true\\" if mergify auto-merge is enabled (default)",
        "docs": "Automatically merge projen upgrade PRs when build passes.",
        "name": "projenUpgradeAutoMerge",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenUpgradeAutoMerge",
        ],
        "switch": "projen-upgrade-auto-merge",
        "type": "boolean",
      },
      Object {
        "default": "[ \\"0 6 * * *\\" ]",
        "docs": "Customize the projenUpgrade schedule in cron expression.",
        "name": "projenUpgradeSchedule",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenUpgradeSchedule",
        ],
        "switch": "projen-upgrade-schedule",
        "type": "unknown",
      },
      Object {
        "default": "- no automatic projen upgrade pull requests",
        "docs": "Periodically submits a pull request for projen upgrades (executes \`yarn projen:upgrade\`).",
        "name": "projenUpgradeSecret",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenUpgradeSecret",
        ],
        "switch": "projen-upgrade-secret",
        "type": "string",
      },
      Object {
        "default": "Semver.latest()",
        "docs": "Version of projen to install.",
        "name": "projenVersion",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenVersion",
        ],
        "switch": "projen-version",
        "type": "Semver",
      },
      Object {
        "default": "true",
        "docs": "Include a GitHub pull request template.",
        "name": "pullRequestTemplate",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "pullRequestTemplate",
        ],
        "switch": "pull-request-template",
        "type": "boolean",
      },
      Object {
        "default": "- default content",
        "docs": "The contents of the pull request template.",
        "name": "pullRequestTemplateContents",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "pullRequestTemplateContents",
        ],
        "switch": "pull-request-template-contents",
        "type": "string",
      },
      Object {
        "name": "python",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "python",
        ],
        "switch": "python",
        "type": "JsiiPythonTarget",
      },
      Object {
        "name": "readme",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "readme",
        ],
        "switch": "readme",
        "type": "string",
      },
      Object {
        "default": "- true if not a subproject",
        "docs": "Installs a GitHub workflow which is triggered when the comment \\"@projen rebuild\\" is added to a pull request.",
        "name": "rebuildBot",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "rebuildBot",
        ],
        "switch": "rebuild-bot",
        "type": "boolean",
      },
      Object {
        "default": "\\"rebuild\\"",
        "docs": "The pull request bot command to use in order to trigger a rebuild and commit of the contents of the branch.",
        "name": "rebuildBotCommand",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "rebuildBotCommand",
        ],
        "switch": "rebuild-bot-command",
        "type": "string",
      },
      Object {
        "default": "[ \\"master\\" ]",
        "docs": "Branches which trigger a release.",
        "name": "releaseBranches",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "releaseBranches",
        ],
        "switch": "release-branches",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Automatically release new versions every commit to one of branches in \`releaseBranches\`.",
        "name": "releaseEveryCommit",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "releaseEveryCommit",
        ],
        "switch": "release-every-commit",
        "type": "boolean",
      },
      Object {
        "default": "- no scheduled releases",
        "docs": "CRON schedule to trigger new releases.",
        "name": "releaseSchedule",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "releaseSchedule",
        ],
        "switch": "release-schedule",
        "type": "string",
      },
      Object {
        "default": "false",
        "docs": "Automatically release to npm when new versions are introduced.",
        "name": "releaseToNpm",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "releaseToNpm",
        ],
        "switch": "release-to-npm",
        "type": "boolean",
      },
      Object {
        "default": "- true if not a subproject",
        "docs": "Define a GitHub workflow for releasing from \\"master\\" when new versions are bumped.",
        "name": "releaseWorkflow",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "releaseWorkflow",
        ],
        "switch": "release-workflow",
        "type": "boolean",
      },
      Object {
        "default": "$GIT_REMOTE",
        "docs": "Git repository URL.",
        "name": "repository",
        "parent": "JsiiProjectOptions",
        "path": Array [
          "repository",
        ],
        "switch": "repository",
        "type": "string",
      },
      Object {
        "default": "\\".\\"",
        "name": "rootdir",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "rootdir",
        ],
        "switch": "rootdir",
        "type": "string",
      },
      Object {
        "default": "{}",
        "docs": "npm scripts to include.",
        "name": "scripts",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "scripts",
        ],
        "switch": "scripts",
        "type": "unknown",
      },
      Object {
        "default": "\\"src\\"",
        "docs": "Typescript sources directory.",
        "name": "srcdir",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "srcdir",
        ],
        "switch": "srcdir",
        "type": "string",
      },
      Object {
        "name": "stability",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "stability",
        ],
        "switch": "stability",
        "type": "string",
      },
      Object {
        "default": "\\"test\\"",
        "docs": "Tests directory.",
        "name": "testdir",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "testdir",
        ],
        "switch": "testdir",
        "type": "string",
      },
      Object {
        "default": "\\"yarn install --frozen-lockfile && yarn projen\\"",
        "docs": "Workflow steps to use in order to bootstrap this repo.",
        "name": "workflowBootstrapSteps",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "workflowBootstrapSteps",
        ],
        "switch": "workflow-bootstrap-steps",
        "type": "unknown",
      },
      Object {
        "default": "- default image",
        "docs": "Container image to use for GitHub workflows.",
        "name": "workflowContainerImage",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "workflowContainerImage",
        ],
        "switch": "workflow-container-image",
        "type": "string",
      },
      Object {
        "default": "- same as \`minNodeVersion\`",
        "docs": "The node version to use in GitHub workflows.",
        "name": "workflowNodeVersion",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "workflowNodeVersion",
        ],
        "switch": "workflow-node-version",
        "type": "string",
      },
    ],
    "pjid": "cdk8s-construct",
    "typename": "ConstructLibraryCdk8s",
  },
  Object {
    "docs": "Multi-language jsii library project.",
    "docsurl": "https://github.com/projen/projen/blob/master/API.md#projen-jsiiproject",
    "fqn": "projen.JsiiProject",
    "moduleName": "projen",
    "options": Array [
      Object {
        "default": "true",
        "docs": "Allow the project to include \`peerDependencies\` and \`bundledDependencies\`.",
        "name": "allowLibraryDependencies",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "allowLibraryDependencies",
        ],
        "switch": "allow-library-dependencies",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Checks that after build there are no modified files on git.",
        "name": "antitamper",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "antitamper",
        ],
        "switch": "antitamper",
        "type": "boolean",
      },
      Object {
        "default": "$GIT_USER_EMAIL",
        "docs": "Email or URL of the library author.",
        "name": "authorAddress",
        "parent": "JsiiProjectOptions",
        "path": Array [
          "authorAddress",
        ],
        "switch": "author-address",
        "type": "string",
      },
      Object {
        "deprecated": true,
        "name": "authorEmail",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "authorEmail",
        ],
        "switch": "author-email",
        "type": "string",
      },
      Object {
        "default": "$GIT_USER_NAME",
        "docs": "The name of the library author.",
        "name": "authorName",
        "parent": "JsiiProjectOptions",
        "path": Array [
          "authorName",
        ],
        "switch": "author-name",
        "type": "string",
      },
      Object {
        "name": "authorOrganization",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "authorOrganization",
        ],
        "switch": "author-organization",
        "type": "boolean",
      },
      Object {
        "deprecated": true,
        "name": "authorUrl",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "authorUrl",
        ],
        "switch": "author-url",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Automatically add all executables under the \`bin\` directory to your \`package.json\` file under the \`bin\` section.",
        "name": "autoDetectBin",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "autoDetectBin",
        ],
        "switch": "auto-detect-bin",
        "type": "boolean",
      },
      Object {
        "docs": "Binary programs vended with your module.",
        "name": "bin",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "bin",
        ],
        "switch": "bin",
        "type": "unknown",
      },
      Object {
        "default": "- true if not a subproject",
        "docs": "Define a GitHub workflow for building PRs.",
        "name": "buildWorkflow",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "buildWorkflow",
        ],
        "switch": "build-workflow",
        "type": "boolean",
      },
      Object {
        "docs": "List of dependencies to bundle into this module.",
        "name": "bundledDeps",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "bundledDeps",
        ],
        "switch": "bundled-deps",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Add a \`clobber\` task which resets the repo to origin.",
        "name": "clobber",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "clobber",
        ],
        "switch": "clobber",
        "type": "boolean",
      },
      Object {
        "default": "false",
        "docs": "Define a GitHub workflow step for sending code coverage metrics to https://codecov.io/ Uses codecov/codecov-action@v1 A secret is required for private repos. Configured with @codeCovTokenSecret.",
        "name": "codeCov",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "codeCov",
        ],
        "switch": "code-cov",
        "type": "boolean",
      },
      Object {
        "default": "- if this option is not specified, only public repositories are supported",
        "docs": "Define the secret name for a specified https://codecov.io/ token A secret is required to send coverage for private repositories.",
        "name": "codeCovTokenSecret",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "codeCovTokenSecret",
        ],
        "switch": "code-cov-token-secret",
        "type": "string",
      },
      Object {
        "default": "false",
        "docs": "Automatically run API compatibility test against the latest version published to npm after compilation.",
        "name": "compat",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "compat",
        ],
        "switch": "compat",
        "type": "boolean",
      },
      Object {
        "default": "\\".compatignore\\"",
        "docs": "Name of the ignore file for API compatibility tests.",
        "name": "compatIgnore",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "compatIgnore",
        ],
        "switch": "compat-ignore",
        "type": "string",
      },
      Object {
        "default": "- defaults to the value of authorName or \\"\\" if \`authorName\` is undefined.",
        "docs": "License copyright owner.",
        "name": "copyrightOwner",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "copyrightOwner",
        ],
        "switch": "copyright-owner",
        "type": "string",
      },
      Object {
        "default": "- current year",
        "docs": "The copyright years to put in the LICENSE file.",
        "name": "copyrightPeriod",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "copyrightPeriod",
        ],
        "switch": "copyright-period",
        "type": "string",
      },
      Object {
        "default": "\\"master\\"",
        "docs": "The name of the main release branch.",
        "name": "defaultReleaseBranch",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "defaultReleaseBranch",
        ],
        "switch": "default-release-branch",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Include dependabot configuration.",
        "name": "dependabot",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "dependabot",
        ],
        "switch": "dependabot",
        "type": "boolean",
      },
      Object {
        "default": "- default options",
        "docs": "Options for dependabot.",
        "name": "dependabotOptions",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "dependabotOptions",
        ],
        "switch": "dependabot-options",
        "type": "DependabotOptions",
      },
      Object {
        "default": "[]",
        "docs": "Runtime dependencies of this module.",
        "name": "deps",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "deps",
        ],
        "switch": "deps",
        "type": "unknown",
      },
      Object {
        "docs": "Library description.",
        "name": "description",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "description",
        ],
        "switch": "description",
        "type": "string",
      },
      Object {
        "default": "[]",
        "docs": "Build dependencies for this module.",
        "name": "devDeps",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "devDeps",
        ],
        "switch": "dev-deps",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Automatically generate API.md from jsii.",
        "name": "docgen",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "docgen",
        ],
        "switch": "docgen",
        "type": "boolean",
      },
      Object {
        "name": "dotnet",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "dotnet",
        ],
        "switch": "dotnet",
        "type": "JsiiDotNetTarget",
      },
      Object {
        "default": "\\"lib/index.js\\"",
        "docs": "Module entrypoint (\`main\` in \`package.json\`).",
        "name": "entrypoint",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "entrypoint",
        ],
        "switch": "entrypoint",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Install eslint.",
        "name": "eslint",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "eslint",
        ],
        "switch": "eslint",
        "type": "boolean",
      },
      Object {
        "default": "false",
        "docs": "Adds a gitpod configuration.",
        "name": "gitpod",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "gitpod",
        ],
        "switch": "gitpod",
        "type": "boolean",
      },
      Object {
        "name": "java",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "java",
        ],
        "switch": "java",
        "type": "JsiiJavaTarget",
      },
      Object {
        "default": "true",
        "docs": "Use jest for unit tests.",
        "name": "jest",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "jest",
        ],
        "switch": "jest",
        "type": "boolean",
      },
      Object {
        "default": "- defaults",
        "docs": "Jest options.",
        "name": "jestOptions",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "jestOptions",
        ],
        "switch": "jest-options",
        "type": "JestOptions",
      },
      Object {
        "docs": "Keywords to include in \`package.json\`.",
        "name": "keywords",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "keywords",
        ],
        "switch": "keywords",
        "type": "unknown",
      },
      Object {
        "default": "\\"lib\\"",
        "docs": "Compiler artifacts output directory.",
        "name": "libdir",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "libdir",
        ],
        "switch": "libdir",
        "type": "string",
      },
      Object {
        "name": "license",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "license",
        ],
        "switch": "license",
        "type": "string",
      },
      Object {
        "default": "- no max",
        "docs": "Minimum node.js version to require via \`engines\` (inclusive).",
        "name": "maxNodeVersion",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "maxNodeVersion",
        ],
        "switch": "max-node-version",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Adds mergify configuration.",
        "name": "mergify",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "mergify",
        ],
        "switch": "mergify",
        "type": "boolean",
      },
      Object {
        "default": "\\"auto-merge\\"",
        "docs": "Automatically merge PRs that build successfully and have this label.",
        "name": "mergifyAutoMergeLabel",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "mergifyAutoMergeLabel",
        ],
        "switch": "mergify-auto-merge-label",
        "type": "string",
      },
      Object {
        "default": "- default options",
        "docs": "Options for mergify.",
        "name": "mergifyOptions",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "mergifyOptions",
        ],
        "switch": "mergify-options",
        "type": "MergifyOptions",
      },
      Object {
        "default": "- no \\"engines\\" specified",
        "docs": "Minimum Node.js version to require via package.json \`engines\` (inclusive).",
        "name": "minNodeVersion",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "minNodeVersion",
        ],
        "switch": "min-node-version",
        "type": "string",
      },
      Object {
        "default": "$BASEDIR",
        "docs": "The name of the library.",
        "name": "name",
        "parent": "JsiiProjectOptions",
        "path": Array [
          "name",
        ],
        "switch": "name",
        "type": "string",
      },
      Object {
        "default": "\\"latest\\"",
        "docs": "The dist-tag to use when releasing to npm.",
        "name": "npmDistTag",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "npmDistTag",
        ],
        "switch": "npm-dist-tag",
        "type": "string",
      },
      Object {
        "docs": "Additional entries to .npmignore.",
        "name": "npmignore",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "npmignore",
        ],
        "switch": "npmignore",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Defines an .npmignore file. Normally this is only needed for libraries that are packaged as tarballs.",
        "name": "npmignoreEnabled",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "npmignoreEnabled",
        ],
        "switch": "npmignore-enabled",
        "type": "boolean",
      },
      Object {
        "default": "\\"registry.npmjs.org\\"",
        "docs": "The registry url to use when releasing packages.",
        "name": "npmRegistry",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "npmRegistry",
        ],
        "switch": "npm-registry",
        "type": "string",
      },
      Object {
        "default": "NpmTaskExecution.PROJEN",
        "docs": "Determines how tasks are executed when invoked as npm scripts (yarn/npm run xyz).",
        "name": "npmTaskExecution",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "npmTaskExecution",
        ],
        "switch": "npm-task-execution",
        "type": "NpmTaskExecution",
      },
      Object {
        "default": "\\".\\"",
        "docs": "The root directory of the project.",
        "name": "outdir",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "outdir",
        ],
        "switch": "outdir",
        "type": "string",
      },
      Object {
        "default": "NodePackageManager.YARN",
        "docs": "The Node Package Manager used to execute scripts.",
        "name": "packageManager",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "packageManager",
        ],
        "switch": "package-manager",
        "type": "NodePackageManager",
      },
      Object {
        "docs": "The parent project, if this project is part of a bigger project.",
        "name": "parent",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "parent",
        ],
        "switch": "parent",
        "type": "Project",
      },
      Object {
        "docs": "Options for \`peerDeps\`.",
        "name": "peerDependencyOptions",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "peerDependencyOptions",
        ],
        "switch": "peer-dependency-options",
        "type": "PeerDependencyOptions",
      },
      Object {
        "default": "[]",
        "docs": "Peer dependencies for this module.",
        "name": "peerDeps",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "peerDeps",
        ],
        "switch": "peer-deps",
        "type": "unknown",
      },
      Object {
        "default": "ProjectType.UNKNOWN",
        "docs": "Which type of project this is (library/app).",
        "name": "projectType",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "projectType",
        ],
        "switch": "project-type",
        "type": "ProjectType",
      },
      Object {
        "default": "\\"npx projen\\"",
        "docs": "The shell command to use in order to run the projen CLI.",
        "name": "projenCommand",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenCommand",
        ],
        "switch": "projen-command",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Indicates of \\"projen\\" should be installed as a devDependency.",
        "name": "projenDevDependency",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenDevDependency",
        ],
        "switch": "projen-dev-dependency",
        "type": "boolean",
      },
      Object {
        "default": "- \\"true\\" if mergify auto-merge is enabled (default)",
        "docs": "Automatically merge projen upgrade PRs when build passes.",
        "name": "projenUpgradeAutoMerge",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenUpgradeAutoMerge",
        ],
        "switch": "projen-upgrade-auto-merge",
        "type": "boolean",
      },
      Object {
        "default": "[ \\"0 6 * * *\\" ]",
        "docs": "Customize the projenUpgrade schedule in cron expression.",
        "name": "projenUpgradeSchedule",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenUpgradeSchedule",
        ],
        "switch": "projen-upgrade-schedule",
        "type": "unknown",
      },
      Object {
        "default": "- no automatic projen upgrade pull requests",
        "docs": "Periodically submits a pull request for projen upgrades (executes \`yarn projen:upgrade\`).",
        "name": "projenUpgradeSecret",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenUpgradeSecret",
        ],
        "switch": "projen-upgrade-secret",
        "type": "string",
      },
      Object {
        "default": "Semver.latest()",
        "docs": "Version of projen to install.",
        "name": "projenVersion",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenVersion",
        ],
        "switch": "projen-version",
        "type": "Semver",
      },
      Object {
        "default": "true",
        "docs": "Include a GitHub pull request template.",
        "name": "pullRequestTemplate",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "pullRequestTemplate",
        ],
        "switch": "pull-request-template",
        "type": "boolean",
      },
      Object {
        "default": "- default content",
        "docs": "The contents of the pull request template.",
        "name": "pullRequestTemplateContents",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "pullRequestTemplateContents",
        ],
        "switch": "pull-request-template-contents",
        "type": "string",
      },
      Object {
        "name": "python",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "python",
        ],
        "switch": "python",
        "type": "JsiiPythonTarget",
      },
      Object {
        "name": "readme",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "readme",
        ],
        "switch": "readme",
        "type": "string",
      },
      Object {
        "default": "- true if not a subproject",
        "docs": "Installs a GitHub workflow which is triggered when the comment \\"@projen rebuild\\" is added to a pull request.",
        "name": "rebuildBot",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "rebuildBot",
        ],
        "switch": "rebuild-bot",
        "type": "boolean",
      },
      Object {
        "default": "\\"rebuild\\"",
        "docs": "The pull request bot command to use in order to trigger a rebuild and commit of the contents of the branch.",
        "name": "rebuildBotCommand",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "rebuildBotCommand",
        ],
        "switch": "rebuild-bot-command",
        "type": "string",
      },
      Object {
        "default": "[ \\"master\\" ]",
        "docs": "Branches which trigger a release.",
        "name": "releaseBranches",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "releaseBranches",
        ],
        "switch": "release-branches",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Automatically release new versions every commit to one of branches in \`releaseBranches\`.",
        "name": "releaseEveryCommit",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "releaseEveryCommit",
        ],
        "switch": "release-every-commit",
        "type": "boolean",
      },
      Object {
        "default": "- no scheduled releases",
        "docs": "CRON schedule to trigger new releases.",
        "name": "releaseSchedule",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "releaseSchedule",
        ],
        "switch": "release-schedule",
        "type": "string",
      },
      Object {
        "default": "false",
        "docs": "Automatically release to npm when new versions are introduced.",
        "name": "releaseToNpm",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "releaseToNpm",
        ],
        "switch": "release-to-npm",
        "type": "boolean",
      },
      Object {
        "default": "- true if not a subproject",
        "docs": "Define a GitHub workflow for releasing from \\"master\\" when new versions are bumped.",
        "name": "releaseWorkflow",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "releaseWorkflow",
        ],
        "switch": "release-workflow",
        "type": "boolean",
      },
      Object {
        "default": "$GIT_REMOTE",
        "docs": "Git repository URL.",
        "name": "repository",
        "parent": "JsiiProjectOptions",
        "path": Array [
          "repository",
        ],
        "switch": "repository",
        "type": "string",
      },
      Object {
        "default": "\\".\\"",
        "name": "rootdir",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "rootdir",
        ],
        "switch": "rootdir",
        "type": "string",
      },
      Object {
        "default": "{}",
        "docs": "npm scripts to include.",
        "name": "scripts",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "scripts",
        ],
        "switch": "scripts",
        "type": "unknown",
      },
      Object {
        "default": "\\"src\\"",
        "docs": "Typescript sources directory.",
        "name": "srcdir",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "srcdir",
        ],
        "switch": "srcdir",
        "type": "string",
      },
      Object {
        "name": "stability",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "stability",
        ],
        "switch": "stability",
        "type": "string",
      },
      Object {
        "default": "\\"test\\"",
        "docs": "Tests directory.",
        "name": "testdir",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "testdir",
        ],
        "switch": "testdir",
        "type": "string",
      },
      Object {
        "default": "\\"yarn install --frozen-lockfile && yarn projen\\"",
        "docs": "Workflow steps to use in order to bootstrap this repo.",
        "name": "workflowBootstrapSteps",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "workflowBootstrapSteps",
        ],
        "switch": "workflow-bootstrap-steps",
        "type": "unknown",
      },
      Object {
        "default": "- default image",
        "docs": "Container image to use for GitHub workflows.",
        "name": "workflowContainerImage",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "workflowContainerImage",
        ],
        "switch": "workflow-container-image",
        "type": "string",
      },
      Object {
        "default": "- same as \`minNodeVersion\`",
        "docs": "The node version to use in GitHub workflows.",
        "name": "workflowNodeVersion",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "workflowNodeVersion",
        ],
        "switch": "workflow-node-version",
        "type": "string",
      },
    ],
    "pjid": "jsii",
    "typename": "JsiiProject",
  },
  Object {
    "docs": "Next.js project without TypeScript.",
    "docsurl": "https://github.com/projen/projen/blob/master/API.md#projen-web.nextjsproject",
    "fqn": "projen.web.NextJsProject",
    "moduleName": "projen",
    "options": Array [
      Object {
        "default": "true",
        "docs": "Allow the project to include \`peerDependencies\` and \`bundledDependencies\`.",
        "name": "allowLibraryDependencies",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "allowLibraryDependencies",
        ],
        "switch": "allow-library-dependencies",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Checks that after build there are no modified files on git.",
        "name": "antitamper",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "antitamper",
        ],
        "switch": "antitamper",
        "type": "boolean",
      },
      Object {
        "default": "\\"public\\"",
        "docs": "Assets directory.",
        "name": "assetsdir",
        "optional": true,
        "parent": "NextJsCommonProjectOptions",
        "path": Array [
          "assetsdir",
        ],
        "switch": "assetsdir",
        "type": "string",
      },
      Object {
        "docs": "Author's e-mail.",
        "name": "authorEmail",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "authorEmail",
        ],
        "switch": "author-email",
        "type": "string",
      },
      Object {
        "docs": "Author's name.",
        "name": "authorName",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "authorName",
        ],
        "switch": "author-name",
        "type": "string",
      },
      Object {
        "docs": "Author's Organization.",
        "name": "authorOrganization",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "authorOrganization",
        ],
        "switch": "author-organization",
        "type": "boolean",
      },
      Object {
        "docs": "Author's URL / Website.",
        "name": "authorUrl",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "authorUrl",
        ],
        "switch": "author-url",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Automatically add all executables under the \`bin\` directory to your \`package.json\` file under the \`bin\` section.",
        "name": "autoDetectBin",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "autoDetectBin",
        ],
        "switch": "auto-detect-bin",
        "type": "boolean",
      },
      Object {
        "docs": "Binary programs vended with your module.",
        "name": "bin",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "bin",
        ],
        "switch": "bin",
        "type": "unknown",
      },
      Object {
        "default": "- true if not a subproject",
        "docs": "Define a GitHub workflow for building PRs.",
        "name": "buildWorkflow",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "buildWorkflow",
        ],
        "switch": "build-workflow",
        "type": "boolean",
      },
      Object {
        "docs": "List of dependencies to bundle into this module.",
        "name": "bundledDeps",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "bundledDeps",
        ],
        "switch": "bundled-deps",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Add a \`clobber\` task which resets the repo to origin.",
        "name": "clobber",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "clobber",
        ],
        "switch": "clobber",
        "type": "boolean",
      },
      Object {
        "default": "false",
        "docs": "Define a GitHub workflow step for sending code coverage metrics to https://codecov.io/ Uses codecov/codecov-action@v1 A secret is required for private repos. Configured with @codeCovTokenSecret.",
        "name": "codeCov",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "codeCov",
        ],
        "switch": "code-cov",
        "type": "boolean",
      },
      Object {
        "default": "- if this option is not specified, only public repositories are supported",
        "docs": "Define the secret name for a specified https://codecov.io/ token A secret is required to send coverage for private repositories.",
        "name": "codeCovTokenSecret",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "codeCovTokenSecret",
        ],
        "switch": "code-cov-token-secret",
        "type": "string",
      },
      Object {
        "default": "- defaults to the value of authorName or \\"\\" if \`authorName\` is undefined.",
        "docs": "License copyright owner.",
        "name": "copyrightOwner",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "copyrightOwner",
        ],
        "switch": "copyright-owner",
        "type": "string",
      },
      Object {
        "default": "- current year",
        "docs": "The copyright years to put in the LICENSE file.",
        "name": "copyrightPeriod",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "copyrightPeriod",
        ],
        "switch": "copyright-period",
        "type": "string",
      },
      Object {
        "default": "\\"master\\"",
        "docs": "The name of the main release branch.",
        "name": "defaultReleaseBranch",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "defaultReleaseBranch",
        ],
        "switch": "default-release-branch",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Include dependabot configuration.",
        "name": "dependabot",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "dependabot",
        ],
        "switch": "dependabot",
        "type": "boolean",
      },
      Object {
        "default": "- default options",
        "docs": "Options for dependabot.",
        "name": "dependabotOptions",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "dependabotOptions",
        ],
        "switch": "dependabot-options",
        "type": "DependabotOptions",
      },
      Object {
        "default": "[]",
        "docs": "Runtime dependencies of this module.",
        "name": "deps",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "deps",
        ],
        "switch": "deps",
        "type": "unknown",
      },
      Object {
        "docs": "The description is just a string that helps people understand the purpose of the package.",
        "name": "description",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "description",
        ],
        "switch": "description",
        "type": "string",
      },
      Object {
        "default": "[]",
        "docs": "Build dependencies for this module.",
        "name": "devDeps",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "devDeps",
        ],
        "switch": "dev-deps",
        "type": "unknown",
      },
      Object {
        "default": "\\"lib/index.js\\"",
        "docs": "Module entrypoint (\`main\` in \`package.json\`).",
        "name": "entrypoint",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "entrypoint",
        ],
        "switch": "entrypoint",
        "type": "string",
      },
      Object {
        "docs": "Additional entries to .gitignore.",
        "name": "gitignore",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "gitignore",
        ],
        "switch": "gitignore",
        "type": "unknown",
      },
      Object {
        "default": "false",
        "docs": "Adds a gitpod configuration.",
        "name": "gitpod",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "gitpod",
        ],
        "switch": "gitpod",
        "type": "boolean",
      },
      Object {
        "docs": "Package's Homepage / Website.",
        "name": "homepage",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "homepage",
        ],
        "switch": "homepage",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Setup jest unit tests.",
        "name": "jest",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "jest",
        ],
        "switch": "jest",
        "type": "boolean",
      },
      Object {
        "default": "- default options",
        "docs": "Jest options.",
        "name": "jestOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "jestOptions",
        ],
        "switch": "jest-options",
        "type": "JestOptions",
      },
      Object {
        "docs": "Keywords to include in \`package.json\`.",
        "name": "keywords",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "keywords",
        ],
        "switch": "keywords",
        "type": "unknown",
      },
      Object {
        "default": "\\"lib\\"",
        "docs": "Compiler artifacts output directory.",
        "name": "libdir",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "libdir",
        ],
        "switch": "libdir",
        "type": "string",
      },
      Object {
        "docs": "License's SPDX identifier.",
        "name": "license",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "license",
        ],
        "switch": "license",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Indicates if a license should be added.",
        "name": "licensed",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "licensed",
        ],
        "switch": "licensed",
        "type": "boolean",
      },
      Object {
        "default": "- no max",
        "docs": "Minimum node.js version to require via \`engines\` (inclusive).",
        "name": "maxNodeVersion",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "maxNodeVersion",
        ],
        "switch": "max-node-version",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Adds mergify configuration.",
        "name": "mergify",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "mergify",
        ],
        "switch": "mergify",
        "type": "boolean",
      },
      Object {
        "default": "\\"auto-merge\\"",
        "docs": "Automatically merge PRs that build successfully and have this label.",
        "name": "mergifyAutoMergeLabel",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "mergifyAutoMergeLabel",
        ],
        "switch": "mergify-auto-merge-label",
        "type": "string",
      },
      Object {
        "default": "- default options",
        "docs": "Options for mergify.",
        "name": "mergifyOptions",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "mergifyOptions",
        ],
        "switch": "mergify-options",
        "type": "MergifyOptions",
      },
      Object {
        "default": "- no \\"engines\\" specified",
        "docs": "Minimum Node.js version to require via package.json \`engines\` (inclusive).",
        "name": "minNodeVersion",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "minNodeVersion",
        ],
        "switch": "min-node-version",
        "type": "string",
      },
      Object {
        "default": "$BASEDIR",
        "docs": "This is the name of your package.",
        "name": "name",
        "parent": "NodeProjectOptions",
        "path": Array [
          "name",
        ],
        "switch": "name",
        "type": "string",
      },
      Object {
        "default": "\\"latest\\"",
        "docs": "The dist-tag to use when releasing to npm.",
        "name": "npmDistTag",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "npmDistTag",
        ],
        "switch": "npm-dist-tag",
        "type": "string",
      },
      Object {
        "docs": "Additional entries to .npmignore.",
        "name": "npmignore",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "npmignore",
        ],
        "switch": "npmignore",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Defines an .npmignore file. Normally this is only needed for libraries that are packaged as tarballs.",
        "name": "npmignoreEnabled",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "npmignoreEnabled",
        ],
        "switch": "npmignore-enabled",
        "type": "boolean",
      },
      Object {
        "default": "\\"registry.npmjs.org\\"",
        "docs": "The registry url to use when releasing packages.",
        "name": "npmRegistry",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "npmRegistry",
        ],
        "switch": "npm-registry",
        "type": "string",
      },
      Object {
        "default": "NpmTaskExecution.PROJEN",
        "docs": "Determines how tasks are executed when invoked as npm scripts (yarn/npm run xyz).",
        "name": "npmTaskExecution",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "npmTaskExecution",
        ],
        "switch": "npm-task-execution",
        "type": "NpmTaskExecution",
      },
      Object {
        "default": "\\".\\"",
        "docs": "The root directory of the project.",
        "name": "outdir",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "outdir",
        ],
        "switch": "outdir",
        "type": "string",
      },
      Object {
        "default": "NodePackageManager.YARN",
        "docs": "The Node Package Manager used to execute scripts.",
        "name": "packageManager",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "packageManager",
        ],
        "switch": "package-manager",
        "type": "NodePackageManager",
      },
      Object {
        "docs": "The parent project, if this project is part of a bigger project.",
        "name": "parent",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "parent",
        ],
        "switch": "parent",
        "type": "Project",
      },
      Object {
        "docs": "Options for \`peerDeps\`.",
        "name": "peerDependencyOptions",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "peerDependencyOptions",
        ],
        "switch": "peer-dependency-options",
        "type": "PeerDependencyOptions",
      },
      Object {
        "default": "[]",
        "docs": "Peer dependencies for this module.",
        "name": "peerDeps",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "peerDeps",
        ],
        "switch": "peer-deps",
        "type": "unknown",
      },
      Object {
        "default": "ProjectType.UNKNOWN",
        "docs": "Which type of project this is (library/app).",
        "name": "projectType",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "projectType",
        ],
        "switch": "project-type",
        "type": "ProjectType",
      },
      Object {
        "default": "\\"npx projen\\"",
        "docs": "The shell command to use in order to run the projen CLI.",
        "name": "projenCommand",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenCommand",
        ],
        "switch": "projen-command",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Indicates of \\"projen\\" should be installed as a devDependency.",
        "name": "projenDevDependency",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenDevDependency",
        ],
        "switch": "projen-dev-dependency",
        "type": "boolean",
      },
      Object {
        "default": "- \\"true\\" if mergify auto-merge is enabled (default)",
        "docs": "Automatically merge projen upgrade PRs when build passes.",
        "name": "projenUpgradeAutoMerge",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenUpgradeAutoMerge",
        ],
        "switch": "projen-upgrade-auto-merge",
        "type": "boolean",
      },
      Object {
        "default": "[ \\"0 6 * * *\\" ]",
        "docs": "Customize the projenUpgrade schedule in cron expression.",
        "name": "projenUpgradeSchedule",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenUpgradeSchedule",
        ],
        "switch": "projen-upgrade-schedule",
        "type": "unknown",
      },
      Object {
        "default": "- no automatic projen upgrade pull requests",
        "docs": "Periodically submits a pull request for projen upgrades (executes \`yarn projen:upgrade\`).",
        "name": "projenUpgradeSecret",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenUpgradeSecret",
        ],
        "switch": "projen-upgrade-secret",
        "type": "string",
      },
      Object {
        "default": "Semver.latest()",
        "docs": "Version of projen to install.",
        "name": "projenVersion",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenVersion",
        ],
        "switch": "projen-version",
        "type": "Semver",
      },
      Object {
        "default": "true",
        "docs": "Include a GitHub pull request template.",
        "name": "pullRequestTemplate",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "pullRequestTemplate",
        ],
        "switch": "pull-request-template",
        "type": "boolean",
      },
      Object {
        "default": "- default content",
        "docs": "The contents of the pull request template.",
        "name": "pullRequestTemplateContents",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "pullRequestTemplateContents",
        ],
        "switch": "pull-request-template-contents",
        "type": "string",
      },
      Object {
        "name": "readme",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "readme",
        ],
        "switch": "readme",
        "type": "string",
      },
      Object {
        "default": "- true if not a subproject",
        "docs": "Installs a GitHub workflow which is triggered when the comment \\"@projen rebuild\\" is added to a pull request.",
        "name": "rebuildBot",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "rebuildBot",
        ],
        "switch": "rebuild-bot",
        "type": "boolean",
      },
      Object {
        "default": "\\"rebuild\\"",
        "docs": "The pull request bot command to use in order to trigger a rebuild and commit of the contents of the branch.",
        "name": "rebuildBotCommand",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "rebuildBotCommand",
        ],
        "switch": "rebuild-bot-command",
        "type": "string",
      },
      Object {
        "default": "[ \\"master\\" ]",
        "docs": "Branches which trigger a release.",
        "name": "releaseBranches",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "releaseBranches",
        ],
        "switch": "release-branches",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Automatically release new versions every commit to one of branches in \`releaseBranches\`.",
        "name": "releaseEveryCommit",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "releaseEveryCommit",
        ],
        "switch": "release-every-commit",
        "type": "boolean",
      },
      Object {
        "default": "- no scheduled releases",
        "docs": "CRON schedule to trigger new releases.",
        "name": "releaseSchedule",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "releaseSchedule",
        ],
        "switch": "release-schedule",
        "type": "string",
      },
      Object {
        "default": "false",
        "docs": "Automatically release to npm when new versions are introduced.",
        "name": "releaseToNpm",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "releaseToNpm",
        ],
        "switch": "release-to-npm",
        "type": "boolean",
      },
      Object {
        "default": "- true if not a subproject",
        "docs": "Define a GitHub workflow for releasing from \\"master\\" when new versions are bumped.",
        "name": "releaseWorkflow",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "releaseWorkflow",
        ],
        "switch": "release-workflow",
        "type": "boolean",
      },
      Object {
        "docs": "The repository is the location where the actual code for your package lives.",
        "name": "repository",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "repository",
        ],
        "switch": "repository",
        "type": "string",
      },
      Object {
        "docs": "If the package.json for your package is not in the root directory (for example if it is part of a monorepo), you can specify the directory in which it lives.",
        "name": "repositoryDirectory",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "repositoryDirectory",
        ],
        "switch": "repository-directory",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Generate one-time sample in \`pages/\` and \`public/\` if there are no files there.",
        "name": "sampleCode",
        "optional": true,
        "parent": "NextJsProjectOptions",
        "path": Array [
          "sampleCode",
        ],
        "switch": "sample-code",
        "type": "boolean",
      },
      Object {
        "default": "{}",
        "docs": "npm scripts to include.",
        "name": "scripts",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "scripts",
        ],
        "switch": "scripts",
        "type": "unknown",
      },
      Object {
        "default": "\\"src\\"",
        "docs": "Typescript sources directory.",
        "name": "srcdir",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "srcdir",
        ],
        "switch": "srcdir",
        "type": "string",
      },
      Object {
        "docs": "Package's Stability.",
        "name": "stability",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "stability",
        ],
        "switch": "stability",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Setup Tailwind CSS as a PostCSS plugin.",
        "name": "tailwind",
        "optional": true,
        "parent": "NextJsCommonProjectOptions",
        "path": Array [
          "tailwind",
        ],
        "switch": "tailwind",
        "type": "boolean",
      },
      Object {
        "default": "\\"test\\"",
        "docs": "Tests directory.",
        "name": "testdir",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "testdir",
        ],
        "switch": "testdir",
        "type": "string",
      },
      Object {
        "default": "\\"yarn install --frozen-lockfile && yarn projen\\"",
        "docs": "Workflow steps to use in order to bootstrap this repo.",
        "name": "workflowBootstrapSteps",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "workflowBootstrapSteps",
        ],
        "switch": "workflow-bootstrap-steps",
        "type": "unknown",
      },
      Object {
        "default": "- default image",
        "docs": "Container image to use for GitHub workflows.",
        "name": "workflowContainerImage",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "workflowContainerImage",
        ],
        "switch": "workflow-container-image",
        "type": "string",
      },
      Object {
        "default": "- same as \`minNodeVersion\`",
        "docs": "The node version to use in GitHub workflows.",
        "name": "workflowNodeVersion",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "workflowNodeVersion",
        ],
        "switch": "workflow-node-version",
        "type": "string",
      },
    ],
    "pjid": "nextjs",
    "typename": "web.NextJsProject",
  },
  Object {
    "docs": "Next.js project with TypeScript.",
    "docsurl": "https://github.com/projen/projen/blob/master/API.md#projen-web.nextjstypescriptproject",
    "fqn": "projen.web.NextJsTypeScriptProject",
    "moduleName": "projen",
    "options": Array [
      Object {
        "default": "true",
        "docs": "Allow the project to include \`peerDependencies\` and \`bundledDependencies\`.",
        "name": "allowLibraryDependencies",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "allowLibraryDependencies",
        ],
        "switch": "allow-library-dependencies",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Checks that after build there are no modified files on git.",
        "name": "antitamper",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "antitamper",
        ],
        "switch": "antitamper",
        "type": "boolean",
      },
      Object {
        "default": "\\"public\\"",
        "docs": "Assets directory.",
        "name": "assetsdir",
        "optional": true,
        "parent": "NextJsCommonProjectOptions",
        "path": Array [
          "assetsdir",
        ],
        "switch": "assetsdir",
        "type": "string",
      },
      Object {
        "docs": "Author's e-mail.",
        "name": "authorEmail",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "authorEmail",
        ],
        "switch": "author-email",
        "type": "string",
      },
      Object {
        "docs": "Author's name.",
        "name": "authorName",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "authorName",
        ],
        "switch": "author-name",
        "type": "string",
      },
      Object {
        "docs": "Author's Organization.",
        "name": "authorOrganization",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "authorOrganization",
        ],
        "switch": "author-organization",
        "type": "boolean",
      },
      Object {
        "docs": "Author's URL / Website.",
        "name": "authorUrl",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "authorUrl",
        ],
        "switch": "author-url",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Automatically add all executables under the \`bin\` directory to your \`package.json\` file under the \`bin\` section.",
        "name": "autoDetectBin",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "autoDetectBin",
        ],
        "switch": "auto-detect-bin",
        "type": "boolean",
      },
      Object {
        "docs": "Binary programs vended with your module.",
        "name": "bin",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "bin",
        ],
        "switch": "bin",
        "type": "unknown",
      },
      Object {
        "default": "- true if not a subproject",
        "docs": "Define a GitHub workflow for building PRs.",
        "name": "buildWorkflow",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "buildWorkflow",
        ],
        "switch": "build-workflow",
        "type": "boolean",
      },
      Object {
        "docs": "List of dependencies to bundle into this module.",
        "name": "bundledDeps",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "bundledDeps",
        ],
        "switch": "bundled-deps",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Add a \`clobber\` task which resets the repo to origin.",
        "name": "clobber",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "clobber",
        ],
        "switch": "clobber",
        "type": "boolean",
      },
      Object {
        "default": "false",
        "docs": "Define a GitHub workflow step for sending code coverage metrics to https://codecov.io/ Uses codecov/codecov-action@v1 A secret is required for private repos. Configured with @codeCovTokenSecret.",
        "name": "codeCov",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "codeCov",
        ],
        "switch": "code-cov",
        "type": "boolean",
      },
      Object {
        "default": "- if this option is not specified, only public repositories are supported",
        "docs": "Define the secret name for a specified https://codecov.io/ token A secret is required to send coverage for private repositories.",
        "name": "codeCovTokenSecret",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "codeCovTokenSecret",
        ],
        "switch": "code-cov-token-secret",
        "type": "string",
      },
      Object {
        "default": "- the default behavior is to delete the lib/ directory and run
jest typescript tests and only if all tests pass, run the compiler.",
        "docs": "Compile the code before running tests.",
        "name": "compileBeforeTest",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "compileBeforeTest",
        ],
        "switch": "compile-before-test",
        "type": "boolean",
      },
      Object {
        "default": "- defaults to the value of authorName or \\"\\" if \`authorName\` is undefined.",
        "docs": "License copyright owner.",
        "name": "copyrightOwner",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "copyrightOwner",
        ],
        "switch": "copyright-owner",
        "type": "string",
      },
      Object {
        "default": "- current year",
        "docs": "The copyright years to put in the LICENSE file.",
        "name": "copyrightPeriod",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "copyrightPeriod",
        ],
        "switch": "copyright-period",
        "type": "string",
      },
      Object {
        "default": "\\"master\\"",
        "docs": "The name of the main release branch.",
        "name": "defaultReleaseBranch",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "defaultReleaseBranch",
        ],
        "switch": "default-release-branch",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Include dependabot configuration.",
        "name": "dependabot",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "dependabot",
        ],
        "switch": "dependabot",
        "type": "boolean",
      },
      Object {
        "default": "- default options",
        "docs": "Options for dependabot.",
        "name": "dependabotOptions",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "dependabotOptions",
        ],
        "switch": "dependabot-options",
        "type": "DependabotOptions",
      },
      Object {
        "default": "[]",
        "docs": "Runtime dependencies of this module.",
        "name": "deps",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "deps",
        ],
        "switch": "deps",
        "type": "unknown",
      },
      Object {
        "docs": "The description is just a string that helps people understand the purpose of the package.",
        "name": "description",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "description",
        ],
        "switch": "description",
        "type": "string",
      },
      Object {
        "default": "[]",
        "docs": "Build dependencies for this module.",
        "name": "devDeps",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "devDeps",
        ],
        "switch": "dev-deps",
        "type": "unknown",
      },
      Object {
        "default": "false",
        "docs": "Do not generate a \`tsconfig.json\` file (used by jsii projects since tsconfig.json is generated by the jsii compiler).",
        "name": "disableTsconfig",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "disableTsconfig",
        ],
        "switch": "disable-tsconfig",
        "type": "boolean",
      },
      Object {
        "default": "false",
        "docs": "Docgen by Typedoc.",
        "name": "docgen",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "docgen",
        ],
        "switch": "docgen",
        "type": "boolean",
      },
      Object {
        "default": "\\"docs\\"",
        "docs": "Docs directory.",
        "name": "docsDirectory",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "docsDirectory",
        ],
        "switch": "docs-directory",
        "type": "string",
      },
      Object {
        "default": "\\"lib/index.js\\"",
        "docs": "Module entrypoint (\`main\` in \`package.json\`).",
        "name": "entrypoint",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "entrypoint",
        ],
        "switch": "entrypoint",
        "type": "string",
      },
      Object {
        "default": "- .d.ts file derived from the project's entrypoint (usually lib/index.d.ts)",
        "docs": "The .d.ts file that includes the type declarations for this module.",
        "name": "entrypointTypes",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "entrypointTypes",
        ],
        "switch": "entrypoint-types",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Setup eslint.",
        "name": "eslint",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "eslint",
        ],
        "switch": "eslint",
        "type": "boolean",
      },
      Object {
        "default": "- opinionated default options",
        "docs": "Eslint options.",
        "name": "eslintOptions",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "eslintOptions",
        ],
        "switch": "eslint-options",
        "type": "EslintOptions",
      },
      Object {
        "docs": "Additional entries to .gitignore.",
        "name": "gitignore",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "gitignore",
        ],
        "switch": "gitignore",
        "type": "unknown",
      },
      Object {
        "default": "false",
        "docs": "Adds a gitpod configuration.",
        "name": "gitpod",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "gitpod",
        ],
        "switch": "gitpod",
        "type": "boolean",
      },
      Object {
        "docs": "Package's Homepage / Website.",
        "name": "homepage",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "homepage",
        ],
        "switch": "homepage",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Setup jest unit tests.",
        "name": "jest",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "jest",
        ],
        "switch": "jest",
        "type": "boolean",
      },
      Object {
        "default": "- default options",
        "docs": "Jest options.",
        "name": "jestOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "jestOptions",
        ],
        "switch": "jest-options",
        "type": "JestOptions",
      },
      Object {
        "docs": "Keywords to include in \`package.json\`.",
        "name": "keywords",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "keywords",
        ],
        "switch": "keywords",
        "type": "unknown",
      },
      Object {
        "default": "\\"lib\\"",
        "docs": "Compiler artifacts output directory.",
        "name": "libdir",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "libdir",
        ],
        "switch": "libdir",
        "type": "string",
      },
      Object {
        "docs": "License's SPDX identifier.",
        "name": "license",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "license",
        ],
        "switch": "license",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Indicates if a license should be added.",
        "name": "licensed",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "licensed",
        ],
        "switch": "licensed",
        "type": "boolean",
      },
      Object {
        "default": "- no max",
        "docs": "Minimum node.js version to require via \`engines\` (inclusive).",
        "name": "maxNodeVersion",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "maxNodeVersion",
        ],
        "switch": "max-node-version",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Adds mergify configuration.",
        "name": "mergify",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "mergify",
        ],
        "switch": "mergify",
        "type": "boolean",
      },
      Object {
        "default": "\\"auto-merge\\"",
        "docs": "Automatically merge PRs that build successfully and have this label.",
        "name": "mergifyAutoMergeLabel",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "mergifyAutoMergeLabel",
        ],
        "switch": "mergify-auto-merge-label",
        "type": "string",
      },
      Object {
        "default": "- default options",
        "docs": "Options for mergify.",
        "name": "mergifyOptions",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "mergifyOptions",
        ],
        "switch": "mergify-options",
        "type": "MergifyOptions",
      },
      Object {
        "default": "- no \\"engines\\" specified",
        "docs": "Minimum Node.js version to require via package.json \`engines\` (inclusive).",
        "name": "minNodeVersion",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "minNodeVersion",
        ],
        "switch": "min-node-version",
        "type": "string",
      },
      Object {
        "default": "$BASEDIR",
        "docs": "This is the name of your package.",
        "name": "name",
        "parent": "NodeProjectOptions",
        "path": Array [
          "name",
        ],
        "switch": "name",
        "type": "string",
      },
      Object {
        "default": "\\"latest\\"",
        "docs": "The dist-tag to use when releasing to npm.",
        "name": "npmDistTag",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "npmDistTag",
        ],
        "switch": "npm-dist-tag",
        "type": "string",
      },
      Object {
        "docs": "Additional entries to .npmignore.",
        "name": "npmignore",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "npmignore",
        ],
        "switch": "npmignore",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Defines an .npmignore file. Normally this is only needed for libraries that are packaged as tarballs.",
        "name": "npmignoreEnabled",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "npmignoreEnabled",
        ],
        "switch": "npmignore-enabled",
        "type": "boolean",
      },
      Object {
        "default": "\\"registry.npmjs.org\\"",
        "docs": "The registry url to use when releasing packages.",
        "name": "npmRegistry",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "npmRegistry",
        ],
        "switch": "npm-registry",
        "type": "string",
      },
      Object {
        "default": "NpmTaskExecution.PROJEN",
        "docs": "Determines how tasks are executed when invoked as npm scripts (yarn/npm run xyz).",
        "name": "npmTaskExecution",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "npmTaskExecution",
        ],
        "switch": "npm-task-execution",
        "type": "NpmTaskExecution",
      },
      Object {
        "default": "\\".\\"",
        "docs": "The root directory of the project.",
        "name": "outdir",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "outdir",
        ],
        "switch": "outdir",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Defines a \`yarn package\` command that will produce a tarball and place it under \`dist/js\`.",
        "name": "package",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "package",
        ],
        "switch": "package",
        "type": "boolean",
      },
      Object {
        "default": "NodePackageManager.YARN",
        "docs": "The Node Package Manager used to execute scripts.",
        "name": "packageManager",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "packageManager",
        ],
        "switch": "package-manager",
        "type": "NodePackageManager",
      },
      Object {
        "docs": "The parent project, if this project is part of a bigger project.",
        "name": "parent",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "parent",
        ],
        "switch": "parent",
        "type": "Project",
      },
      Object {
        "docs": "Options for \`peerDeps\`.",
        "name": "peerDependencyOptions",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "peerDependencyOptions",
        ],
        "switch": "peer-dependency-options",
        "type": "PeerDependencyOptions",
      },
      Object {
        "default": "[]",
        "docs": "Peer dependencies for this module.",
        "name": "peerDeps",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "peerDeps",
        ],
        "switch": "peer-deps",
        "type": "unknown",
      },
      Object {
        "default": "ProjectType.UNKNOWN",
        "docs": "Which type of project this is (library/app).",
        "name": "projectType",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "projectType",
        ],
        "switch": "project-type",
        "type": "ProjectType",
      },
      Object {
        "default": "\\"npx projen\\"",
        "docs": "The shell command to use in order to run the projen CLI.",
        "name": "projenCommand",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenCommand",
        ],
        "switch": "projen-command",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Indicates of \\"projen\\" should be installed as a devDependency.",
        "name": "projenDevDependency",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenDevDependency",
        ],
        "switch": "projen-dev-dependency",
        "type": "boolean",
      },
      Object {
        "default": "- \\"true\\" if mergify auto-merge is enabled (default)",
        "docs": "Automatically merge projen upgrade PRs when build passes.",
        "name": "projenUpgradeAutoMerge",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenUpgradeAutoMerge",
        ],
        "switch": "projen-upgrade-auto-merge",
        "type": "boolean",
      },
      Object {
        "default": "[ \\"0 6 * * *\\" ]",
        "docs": "Customize the projenUpgrade schedule in cron expression.",
        "name": "projenUpgradeSchedule",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenUpgradeSchedule",
        ],
        "switch": "projen-upgrade-schedule",
        "type": "unknown",
      },
      Object {
        "default": "- no automatic projen upgrade pull requests",
        "docs": "Periodically submits a pull request for projen upgrades (executes \`yarn projen:upgrade\`).",
        "name": "projenUpgradeSecret",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenUpgradeSecret",
        ],
        "switch": "projen-upgrade-secret",
        "type": "string",
      },
      Object {
        "default": "Semver.latest()",
        "docs": "Version of projen to install.",
        "name": "projenVersion",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenVersion",
        ],
        "switch": "projen-version",
        "type": "Semver",
      },
      Object {
        "default": "true",
        "docs": "Include a GitHub pull request template.",
        "name": "pullRequestTemplate",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "pullRequestTemplate",
        ],
        "switch": "pull-request-template",
        "type": "boolean",
      },
      Object {
        "default": "- default content",
        "docs": "The contents of the pull request template.",
        "name": "pullRequestTemplateContents",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "pullRequestTemplateContents",
        ],
        "switch": "pull-request-template-contents",
        "type": "string",
      },
      Object {
        "name": "readme",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "readme",
        ],
        "switch": "readme",
        "type": "string",
      },
      Object {
        "default": "- true if not a subproject",
        "docs": "Installs a GitHub workflow which is triggered when the comment \\"@projen rebuild\\" is added to a pull request.",
        "name": "rebuildBot",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "rebuildBot",
        ],
        "switch": "rebuild-bot",
        "type": "boolean",
      },
      Object {
        "default": "\\"rebuild\\"",
        "docs": "The pull request bot command to use in order to trigger a rebuild and commit of the contents of the branch.",
        "name": "rebuildBotCommand",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "rebuildBotCommand",
        ],
        "switch": "rebuild-bot-command",
        "type": "string",
      },
      Object {
        "default": "[ \\"master\\" ]",
        "docs": "Branches which trigger a release.",
        "name": "releaseBranches",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "releaseBranches",
        ],
        "switch": "release-branches",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Automatically release new versions every commit to one of branches in \`releaseBranches\`.",
        "name": "releaseEveryCommit",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "releaseEveryCommit",
        ],
        "switch": "release-every-commit",
        "type": "boolean",
      },
      Object {
        "default": "- no scheduled releases",
        "docs": "CRON schedule to trigger new releases.",
        "name": "releaseSchedule",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "releaseSchedule",
        ],
        "switch": "release-schedule",
        "type": "string",
      },
      Object {
        "default": "false",
        "docs": "Automatically release to npm when new versions are introduced.",
        "name": "releaseToNpm",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "releaseToNpm",
        ],
        "switch": "release-to-npm",
        "type": "boolean",
      },
      Object {
        "default": "- true if not a subproject",
        "docs": "Define a GitHub workflow for releasing from \\"master\\" when new versions are bumped.",
        "name": "releaseWorkflow",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "releaseWorkflow",
        ],
        "switch": "release-workflow",
        "type": "boolean",
      },
      Object {
        "docs": "The repository is the location where the actual code for your package lives.",
        "name": "repository",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "repository",
        ],
        "switch": "repository",
        "type": "string",
      },
      Object {
        "docs": "If the package.json for your package is not in the root directory (for example if it is part of a monorepo), you can specify the directory in which it lives.",
        "name": "repositoryDirectory",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "repositoryDirectory",
        ],
        "switch": "repository-directory",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Generate one-time sample in \`src/\` and \`test/\` if there are no files there.",
        "name": "sampleCode",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "sampleCode",
        ],
        "switch": "sample-code",
        "type": "boolean",
      },
      Object {
        "default": "{}",
        "docs": "npm scripts to include.",
        "name": "scripts",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "scripts",
        ],
        "switch": "scripts",
        "type": "unknown",
      },
      Object {
        "default": "\\"src\\"",
        "docs": "Typescript sources directory.",
        "name": "srcdir",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "srcdir",
        ],
        "switch": "srcdir",
        "type": "string",
      },
      Object {
        "docs": "Package's Stability.",
        "name": "stability",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "stability",
        ],
        "switch": "stability",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Setup Tailwind CSS as a PostCSS plugin.",
        "name": "tailwind",
        "optional": true,
        "parent": "NextJsCommonProjectOptions",
        "path": Array [
          "tailwind",
        ],
        "switch": "tailwind",
        "type": "boolean",
      },
      Object {
        "default": "\\"test\\"",
        "docs": "Tests directory.",
        "name": "testdir",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "testdir",
        ],
        "switch": "testdir",
        "type": "string",
      },
      Object {
        "docs": "Custom TSConfig.",
        "name": "tsconfig",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "tsconfig",
        ],
        "switch": "tsconfig",
        "type": "TypescriptConfigOptions",
      },
      Object {
        "default": "\\"^3.9.5\\"",
        "docs": "TypeScript version to use.",
        "name": "typescriptVersion",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "typescriptVersion",
        ],
        "switch": "typescript-version",
        "type": "string",
      },
      Object {
        "default": "\\"yarn install --frozen-lockfile && yarn projen\\"",
        "docs": "Workflow steps to use in order to bootstrap this repo.",
        "name": "workflowBootstrapSteps",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "workflowBootstrapSteps",
        ],
        "switch": "workflow-bootstrap-steps",
        "type": "unknown",
      },
      Object {
        "default": "- default image",
        "docs": "Container image to use for GitHub workflows.",
        "name": "workflowContainerImage",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "workflowContainerImage",
        ],
        "switch": "workflow-container-image",
        "type": "string",
      },
      Object {
        "default": "- same as \`minNodeVersion\`",
        "docs": "The node version to use in GitHub workflows.",
        "name": "workflowNodeVersion",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "workflowNodeVersion",
        ],
        "switch": "workflow-node-version",
        "type": "string",
      },
    ],
    "pjid": "nextjs-ts",
    "typename": "web.NextJsTypeScriptProject",
  },
  Object {
    "docs": "Node.js project.",
    "docsurl": "https://github.com/projen/projen/blob/master/API.md#projen-nodeproject",
    "fqn": "projen.NodeProject",
    "moduleName": "projen",
    "options": Array [
      Object {
        "default": "true",
        "docs": "Allow the project to include \`peerDependencies\` and \`bundledDependencies\`.",
        "name": "allowLibraryDependencies",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "allowLibraryDependencies",
        ],
        "switch": "allow-library-dependencies",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Checks that after build there are no modified files on git.",
        "name": "antitamper",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "antitamper",
        ],
        "switch": "antitamper",
        "type": "boolean",
      },
      Object {
        "docs": "Author's e-mail.",
        "name": "authorEmail",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "authorEmail",
        ],
        "switch": "author-email",
        "type": "string",
      },
      Object {
        "docs": "Author's name.",
        "name": "authorName",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "authorName",
        ],
        "switch": "author-name",
        "type": "string",
      },
      Object {
        "docs": "Author's Organization.",
        "name": "authorOrganization",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "authorOrganization",
        ],
        "switch": "author-organization",
        "type": "boolean",
      },
      Object {
        "docs": "Author's URL / Website.",
        "name": "authorUrl",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "authorUrl",
        ],
        "switch": "author-url",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Automatically add all executables under the \`bin\` directory to your \`package.json\` file under the \`bin\` section.",
        "name": "autoDetectBin",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "autoDetectBin",
        ],
        "switch": "auto-detect-bin",
        "type": "boolean",
      },
      Object {
        "docs": "Binary programs vended with your module.",
        "name": "bin",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "bin",
        ],
        "switch": "bin",
        "type": "unknown",
      },
      Object {
        "default": "- true if not a subproject",
        "docs": "Define a GitHub workflow for building PRs.",
        "name": "buildWorkflow",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "buildWorkflow",
        ],
        "switch": "build-workflow",
        "type": "boolean",
      },
      Object {
        "docs": "List of dependencies to bundle into this module.",
        "name": "bundledDeps",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "bundledDeps",
        ],
        "switch": "bundled-deps",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Add a \`clobber\` task which resets the repo to origin.",
        "name": "clobber",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "clobber",
        ],
        "switch": "clobber",
        "type": "boolean",
      },
      Object {
        "default": "false",
        "docs": "Define a GitHub workflow step for sending code coverage metrics to https://codecov.io/ Uses codecov/codecov-action@v1 A secret is required for private repos. Configured with @codeCovTokenSecret.",
        "name": "codeCov",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "codeCov",
        ],
        "switch": "code-cov",
        "type": "boolean",
      },
      Object {
        "default": "- if this option is not specified, only public repositories are supported",
        "docs": "Define the secret name for a specified https://codecov.io/ token A secret is required to send coverage for private repositories.",
        "name": "codeCovTokenSecret",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "codeCovTokenSecret",
        ],
        "switch": "code-cov-token-secret",
        "type": "string",
      },
      Object {
        "default": "- defaults to the value of authorName or \\"\\" if \`authorName\` is undefined.",
        "docs": "License copyright owner.",
        "name": "copyrightOwner",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "copyrightOwner",
        ],
        "switch": "copyright-owner",
        "type": "string",
      },
      Object {
        "default": "- current year",
        "docs": "The copyright years to put in the LICENSE file.",
        "name": "copyrightPeriod",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "copyrightPeriod",
        ],
        "switch": "copyright-period",
        "type": "string",
      },
      Object {
        "default": "\\"master\\"",
        "docs": "The name of the main release branch.",
        "name": "defaultReleaseBranch",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "defaultReleaseBranch",
        ],
        "switch": "default-release-branch",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Include dependabot configuration.",
        "name": "dependabot",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "dependabot",
        ],
        "switch": "dependabot",
        "type": "boolean",
      },
      Object {
        "default": "- default options",
        "docs": "Options for dependabot.",
        "name": "dependabotOptions",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "dependabotOptions",
        ],
        "switch": "dependabot-options",
        "type": "DependabotOptions",
      },
      Object {
        "default": "[]",
        "docs": "Runtime dependencies of this module.",
        "name": "deps",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "deps",
        ],
        "switch": "deps",
        "type": "unknown",
      },
      Object {
        "docs": "The description is just a string that helps people understand the purpose of the package.",
        "name": "description",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "description",
        ],
        "switch": "description",
        "type": "string",
      },
      Object {
        "default": "[]",
        "docs": "Build dependencies for this module.",
        "name": "devDeps",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "devDeps",
        ],
        "switch": "dev-deps",
        "type": "unknown",
      },
      Object {
        "default": "\\"lib/index.js\\"",
        "docs": "Module entrypoint (\`main\` in \`package.json\`).",
        "name": "entrypoint",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "entrypoint",
        ],
        "switch": "entrypoint",
        "type": "string",
      },
      Object {
        "docs": "Additional entries to .gitignore.",
        "name": "gitignore",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "gitignore",
        ],
        "switch": "gitignore",
        "type": "unknown",
      },
      Object {
        "default": "false",
        "docs": "Adds a gitpod configuration.",
        "name": "gitpod",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "gitpod",
        ],
        "switch": "gitpod",
        "type": "boolean",
      },
      Object {
        "docs": "Package's Homepage / Website.",
        "name": "homepage",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "homepage",
        ],
        "switch": "homepage",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Setup jest unit tests.",
        "name": "jest",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "jest",
        ],
        "switch": "jest",
        "type": "boolean",
      },
      Object {
        "default": "- default options",
        "docs": "Jest options.",
        "name": "jestOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "jestOptions",
        ],
        "switch": "jest-options",
        "type": "JestOptions",
      },
      Object {
        "docs": "Keywords to include in \`package.json\`.",
        "name": "keywords",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "keywords",
        ],
        "switch": "keywords",
        "type": "unknown",
      },
      Object {
        "default": "\\"lib\\"",
        "docs": "Compiler artifacts output directory.",
        "name": "libdir",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "libdir",
        ],
        "switch": "libdir",
        "type": "string",
      },
      Object {
        "docs": "License's SPDX identifier.",
        "name": "license",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "license",
        ],
        "switch": "license",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Indicates if a license should be added.",
        "name": "licensed",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "licensed",
        ],
        "switch": "licensed",
        "type": "boolean",
      },
      Object {
        "default": "- no max",
        "docs": "Minimum node.js version to require via \`engines\` (inclusive).",
        "name": "maxNodeVersion",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "maxNodeVersion",
        ],
        "switch": "max-node-version",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Adds mergify configuration.",
        "name": "mergify",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "mergify",
        ],
        "switch": "mergify",
        "type": "boolean",
      },
      Object {
        "default": "\\"auto-merge\\"",
        "docs": "Automatically merge PRs that build successfully and have this label.",
        "name": "mergifyAutoMergeLabel",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "mergifyAutoMergeLabel",
        ],
        "switch": "mergify-auto-merge-label",
        "type": "string",
      },
      Object {
        "default": "- default options",
        "docs": "Options for mergify.",
        "name": "mergifyOptions",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "mergifyOptions",
        ],
        "switch": "mergify-options",
        "type": "MergifyOptions",
      },
      Object {
        "default": "- no \\"engines\\" specified",
        "docs": "Minimum Node.js version to require via package.json \`engines\` (inclusive).",
        "name": "minNodeVersion",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "minNodeVersion",
        ],
        "switch": "min-node-version",
        "type": "string",
      },
      Object {
        "default": "$BASEDIR",
        "docs": "This is the name of your package.",
        "name": "name",
        "parent": "NodeProjectOptions",
        "path": Array [
          "name",
        ],
        "switch": "name",
        "type": "string",
      },
      Object {
        "default": "\\"latest\\"",
        "docs": "The dist-tag to use when releasing to npm.",
        "name": "npmDistTag",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "npmDistTag",
        ],
        "switch": "npm-dist-tag",
        "type": "string",
      },
      Object {
        "docs": "Additional entries to .npmignore.",
        "name": "npmignore",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "npmignore",
        ],
        "switch": "npmignore",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Defines an .npmignore file. Normally this is only needed for libraries that are packaged as tarballs.",
        "name": "npmignoreEnabled",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "npmignoreEnabled",
        ],
        "switch": "npmignore-enabled",
        "type": "boolean",
      },
      Object {
        "default": "\\"registry.npmjs.org\\"",
        "docs": "The registry url to use when releasing packages.",
        "name": "npmRegistry",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "npmRegistry",
        ],
        "switch": "npm-registry",
        "type": "string",
      },
      Object {
        "default": "NpmTaskExecution.PROJEN",
        "docs": "Determines how tasks are executed when invoked as npm scripts (yarn/npm run xyz).",
        "name": "npmTaskExecution",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "npmTaskExecution",
        ],
        "switch": "npm-task-execution",
        "type": "NpmTaskExecution",
      },
      Object {
        "default": "\\".\\"",
        "docs": "The root directory of the project.",
        "name": "outdir",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "outdir",
        ],
        "switch": "outdir",
        "type": "string",
      },
      Object {
        "default": "NodePackageManager.YARN",
        "docs": "The Node Package Manager used to execute scripts.",
        "name": "packageManager",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "packageManager",
        ],
        "switch": "package-manager",
        "type": "NodePackageManager",
      },
      Object {
        "docs": "The parent project, if this project is part of a bigger project.",
        "name": "parent",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "parent",
        ],
        "switch": "parent",
        "type": "Project",
      },
      Object {
        "docs": "Options for \`peerDeps\`.",
        "name": "peerDependencyOptions",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "peerDependencyOptions",
        ],
        "switch": "peer-dependency-options",
        "type": "PeerDependencyOptions",
      },
      Object {
        "default": "[]",
        "docs": "Peer dependencies for this module.",
        "name": "peerDeps",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "peerDeps",
        ],
        "switch": "peer-deps",
        "type": "unknown",
      },
      Object {
        "default": "ProjectType.UNKNOWN",
        "docs": "Which type of project this is (library/app).",
        "name": "projectType",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "projectType",
        ],
        "switch": "project-type",
        "type": "ProjectType",
      },
      Object {
        "default": "\\"npx projen\\"",
        "docs": "The shell command to use in order to run the projen CLI.",
        "name": "projenCommand",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenCommand",
        ],
        "switch": "projen-command",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Indicates of \\"projen\\" should be installed as a devDependency.",
        "name": "projenDevDependency",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenDevDependency",
        ],
        "switch": "projen-dev-dependency",
        "type": "boolean",
      },
      Object {
        "default": "- \\"true\\" if mergify auto-merge is enabled (default)",
        "docs": "Automatically merge projen upgrade PRs when build passes.",
        "name": "projenUpgradeAutoMerge",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenUpgradeAutoMerge",
        ],
        "switch": "projen-upgrade-auto-merge",
        "type": "boolean",
      },
      Object {
        "default": "[ \\"0 6 * * *\\" ]",
        "docs": "Customize the projenUpgrade schedule in cron expression.",
        "name": "projenUpgradeSchedule",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenUpgradeSchedule",
        ],
        "switch": "projen-upgrade-schedule",
        "type": "unknown",
      },
      Object {
        "default": "- no automatic projen upgrade pull requests",
        "docs": "Periodically submits a pull request for projen upgrades (executes \`yarn projen:upgrade\`).",
        "name": "projenUpgradeSecret",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenUpgradeSecret",
        ],
        "switch": "projen-upgrade-secret",
        "type": "string",
      },
      Object {
        "default": "Semver.latest()",
        "docs": "Version of projen to install.",
        "name": "projenVersion",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenVersion",
        ],
        "switch": "projen-version",
        "type": "Semver",
      },
      Object {
        "default": "true",
        "docs": "Include a GitHub pull request template.",
        "name": "pullRequestTemplate",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "pullRequestTemplate",
        ],
        "switch": "pull-request-template",
        "type": "boolean",
      },
      Object {
        "default": "- default content",
        "docs": "The contents of the pull request template.",
        "name": "pullRequestTemplateContents",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "pullRequestTemplateContents",
        ],
        "switch": "pull-request-template-contents",
        "type": "string",
      },
      Object {
        "name": "readme",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "readme",
        ],
        "switch": "readme",
        "type": "string",
      },
      Object {
        "default": "- true if not a subproject",
        "docs": "Installs a GitHub workflow which is triggered when the comment \\"@projen rebuild\\" is added to a pull request.",
        "name": "rebuildBot",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "rebuildBot",
        ],
        "switch": "rebuild-bot",
        "type": "boolean",
      },
      Object {
        "default": "\\"rebuild\\"",
        "docs": "The pull request bot command to use in order to trigger a rebuild and commit of the contents of the branch.",
        "name": "rebuildBotCommand",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "rebuildBotCommand",
        ],
        "switch": "rebuild-bot-command",
        "type": "string",
      },
      Object {
        "default": "[ \\"master\\" ]",
        "docs": "Branches which trigger a release.",
        "name": "releaseBranches",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "releaseBranches",
        ],
        "switch": "release-branches",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Automatically release new versions every commit to one of branches in \`releaseBranches\`.",
        "name": "releaseEveryCommit",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "releaseEveryCommit",
        ],
        "switch": "release-every-commit",
        "type": "boolean",
      },
      Object {
        "default": "- no scheduled releases",
        "docs": "CRON schedule to trigger new releases.",
        "name": "releaseSchedule",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "releaseSchedule",
        ],
        "switch": "release-schedule",
        "type": "string",
      },
      Object {
        "default": "false",
        "docs": "Automatically release to npm when new versions are introduced.",
        "name": "releaseToNpm",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "releaseToNpm",
        ],
        "switch": "release-to-npm",
        "type": "boolean",
      },
      Object {
        "default": "- true if not a subproject",
        "docs": "Define a GitHub workflow for releasing from \\"master\\" when new versions are bumped.",
        "name": "releaseWorkflow",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "releaseWorkflow",
        ],
        "switch": "release-workflow",
        "type": "boolean",
      },
      Object {
        "docs": "The repository is the location where the actual code for your package lives.",
        "name": "repository",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "repository",
        ],
        "switch": "repository",
        "type": "string",
      },
      Object {
        "docs": "If the package.json for your package is not in the root directory (for example if it is part of a monorepo), you can specify the directory in which it lives.",
        "name": "repositoryDirectory",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "repositoryDirectory",
        ],
        "switch": "repository-directory",
        "type": "string",
      },
      Object {
        "default": "{}",
        "docs": "npm scripts to include.",
        "name": "scripts",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "scripts",
        ],
        "switch": "scripts",
        "type": "unknown",
      },
      Object {
        "default": "\\"src\\"",
        "docs": "Typescript sources directory.",
        "name": "srcdir",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "srcdir",
        ],
        "switch": "srcdir",
        "type": "string",
      },
      Object {
        "docs": "Package's Stability.",
        "name": "stability",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "stability",
        ],
        "switch": "stability",
        "type": "string",
      },
      Object {
        "default": "\\"test\\"",
        "docs": "Tests directory.",
        "name": "testdir",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "testdir",
        ],
        "switch": "testdir",
        "type": "string",
      },
      Object {
        "default": "\\"yarn install --frozen-lockfile && yarn projen\\"",
        "docs": "Workflow steps to use in order to bootstrap this repo.",
        "name": "workflowBootstrapSteps",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "workflowBootstrapSteps",
        ],
        "switch": "workflow-bootstrap-steps",
        "type": "unknown",
      },
      Object {
        "default": "- default image",
        "docs": "Container image to use for GitHub workflows.",
        "name": "workflowContainerImage",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "workflowContainerImage",
        ],
        "switch": "workflow-container-image",
        "type": "string",
      },
      Object {
        "default": "- same as \`minNodeVersion\`",
        "docs": "The node version to use in GitHub workflows.",
        "name": "workflowNodeVersion",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "workflowNodeVersion",
        ],
        "switch": "workflow-node-version",
        "type": "string",
      },
    ],
    "pjid": "node",
    "typename": "NodeProject",
  },
  Object {
    "docs": "Base project.",
    "docsurl": "https://github.com/projen/projen/blob/master/API.md#projen-project",
    "fqn": "projen.Project",
    "moduleName": "projen",
    "options": Array [
      Object {
        "default": "true",
        "docs": "Add a \`clobber\` task which resets the repo to origin.",
        "name": "clobber",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "clobber",
        ],
        "switch": "clobber",
        "type": "boolean",
      },
      Object {
        "default": "false",
        "docs": "Adds a gitpod configuration.",
        "name": "gitpod",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "gitpod",
        ],
        "switch": "gitpod",
        "type": "boolean",
      },
      Object {
        "default": "\\".\\"",
        "docs": "The root directory of the project.",
        "name": "outdir",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "outdir",
        ],
        "switch": "outdir",
        "type": "string",
      },
      Object {
        "docs": "The parent project, if this project is part of a bigger project.",
        "name": "parent",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "parent",
        ],
        "switch": "parent",
        "type": "Project",
      },
      Object {
        "default": "ProjectType.UNKNOWN",
        "docs": "Which type of project this is (library/app).",
        "name": "projectType",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "projectType",
        ],
        "switch": "project-type",
        "type": "ProjectType",
      },
      Object {
        "name": "readme",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "readme",
        ],
        "switch": "readme",
        "type": "string",
      },
    ],
    "pjid": "project",
    "typename": "Project",
  },
  Object {
    "docs": "React project without TypeScript.",
    "docsurl": "https://github.com/projen/projen/blob/master/API.md#projen-web.reactproject",
    "fqn": "projen.web.ReactProject",
    "moduleName": "projen",
    "options": Array [
      Object {
        "default": "true",
        "docs": "Allow the project to include \`peerDependencies\` and \`bundledDependencies\`.",
        "name": "allowLibraryDependencies",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "allowLibraryDependencies",
        ],
        "switch": "allow-library-dependencies",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Checks that after build there are no modified files on git.",
        "name": "antitamper",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "antitamper",
        ],
        "switch": "antitamper",
        "type": "boolean",
      },
      Object {
        "docs": "Author's e-mail.",
        "name": "authorEmail",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "authorEmail",
        ],
        "switch": "author-email",
        "type": "string",
      },
      Object {
        "docs": "Author's name.",
        "name": "authorName",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "authorName",
        ],
        "switch": "author-name",
        "type": "string",
      },
      Object {
        "docs": "Author's Organization.",
        "name": "authorOrganization",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "authorOrganization",
        ],
        "switch": "author-organization",
        "type": "boolean",
      },
      Object {
        "docs": "Author's URL / Website.",
        "name": "authorUrl",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "authorUrl",
        ],
        "switch": "author-url",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Automatically add all executables under the \`bin\` directory to your \`package.json\` file under the \`bin\` section.",
        "name": "autoDetectBin",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "autoDetectBin",
        ],
        "switch": "auto-detect-bin",
        "type": "boolean",
      },
      Object {
        "docs": "Binary programs vended with your module.",
        "name": "bin",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "bin",
        ],
        "switch": "bin",
        "type": "unknown",
      },
      Object {
        "default": "- true if not a subproject",
        "docs": "Define a GitHub workflow for building PRs.",
        "name": "buildWorkflow",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "buildWorkflow",
        ],
        "switch": "build-workflow",
        "type": "boolean",
      },
      Object {
        "docs": "List of dependencies to bundle into this module.",
        "name": "bundledDeps",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "bundledDeps",
        ],
        "switch": "bundled-deps",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Add a \`clobber\` task which resets the repo to origin.",
        "name": "clobber",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "clobber",
        ],
        "switch": "clobber",
        "type": "boolean",
      },
      Object {
        "default": "false",
        "docs": "Define a GitHub workflow step for sending code coverage metrics to https://codecov.io/ Uses codecov/codecov-action@v1 A secret is required for private repos. Configured with @codeCovTokenSecret.",
        "name": "codeCov",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "codeCov",
        ],
        "switch": "code-cov",
        "type": "boolean",
      },
      Object {
        "default": "- if this option is not specified, only public repositories are supported",
        "docs": "Define the secret name for a specified https://codecov.io/ token A secret is required to send coverage for private repositories.",
        "name": "codeCovTokenSecret",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "codeCovTokenSecret",
        ],
        "switch": "code-cov-token-secret",
        "type": "string",
      },
      Object {
        "default": "- defaults to the value of authorName or \\"\\" if \`authorName\` is undefined.",
        "docs": "License copyright owner.",
        "name": "copyrightOwner",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "copyrightOwner",
        ],
        "switch": "copyright-owner",
        "type": "string",
      },
      Object {
        "default": "- current year",
        "docs": "The copyright years to put in the LICENSE file.",
        "name": "copyrightPeriod",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "copyrightPeriod",
        ],
        "switch": "copyright-period",
        "type": "string",
      },
      Object {
        "default": "\\"master\\"",
        "docs": "The name of the main release branch.",
        "name": "defaultReleaseBranch",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "defaultReleaseBranch",
        ],
        "switch": "default-release-branch",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Include dependabot configuration.",
        "name": "dependabot",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "dependabot",
        ],
        "switch": "dependabot",
        "type": "boolean",
      },
      Object {
        "default": "- default options",
        "docs": "Options for dependabot.",
        "name": "dependabotOptions",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "dependabotOptions",
        ],
        "switch": "dependabot-options",
        "type": "DependabotOptions",
      },
      Object {
        "default": "[]",
        "docs": "Runtime dependencies of this module.",
        "name": "deps",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "deps",
        ],
        "switch": "deps",
        "type": "unknown",
      },
      Object {
        "docs": "The description is just a string that helps people understand the purpose of the package.",
        "name": "description",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "description",
        ],
        "switch": "description",
        "type": "string",
      },
      Object {
        "default": "[]",
        "docs": "Build dependencies for this module.",
        "name": "devDeps",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "devDeps",
        ],
        "switch": "dev-deps",
        "type": "unknown",
      },
      Object {
        "default": "\\"lib/index.js\\"",
        "docs": "Module entrypoint (\`main\` in \`package.json\`).",
        "name": "entrypoint",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "entrypoint",
        ],
        "switch": "entrypoint",
        "type": "string",
      },
      Object {
        "docs": "Additional entries to .gitignore.",
        "name": "gitignore",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "gitignore",
        ],
        "switch": "gitignore",
        "type": "unknown",
      },
      Object {
        "default": "false",
        "docs": "Adds a gitpod configuration.",
        "name": "gitpod",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "gitpod",
        ],
        "switch": "gitpod",
        "type": "boolean",
      },
      Object {
        "docs": "Package's Homepage / Website.",
        "name": "homepage",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "homepage",
        ],
        "switch": "homepage",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Setup jest unit tests.",
        "name": "jest",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "jest",
        ],
        "switch": "jest",
        "type": "boolean",
      },
      Object {
        "default": "- default options",
        "docs": "Jest options.",
        "name": "jestOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "jestOptions",
        ],
        "switch": "jest-options",
        "type": "JestOptions",
      },
      Object {
        "docs": "Keywords to include in \`package.json\`.",
        "name": "keywords",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "keywords",
        ],
        "switch": "keywords",
        "type": "unknown",
      },
      Object {
        "default": "\\"lib\\"",
        "docs": "Compiler artifacts output directory.",
        "name": "libdir",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "libdir",
        ],
        "switch": "libdir",
        "type": "string",
      },
      Object {
        "docs": "License's SPDX identifier.",
        "name": "license",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "license",
        ],
        "switch": "license",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Indicates if a license should be added.",
        "name": "licensed",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "licensed",
        ],
        "switch": "licensed",
        "type": "boolean",
      },
      Object {
        "default": "- no max",
        "docs": "Minimum node.js version to require via \`engines\` (inclusive).",
        "name": "maxNodeVersion",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "maxNodeVersion",
        ],
        "switch": "max-node-version",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Adds mergify configuration.",
        "name": "mergify",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "mergify",
        ],
        "switch": "mergify",
        "type": "boolean",
      },
      Object {
        "default": "\\"auto-merge\\"",
        "docs": "Automatically merge PRs that build successfully and have this label.",
        "name": "mergifyAutoMergeLabel",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "mergifyAutoMergeLabel",
        ],
        "switch": "mergify-auto-merge-label",
        "type": "string",
      },
      Object {
        "default": "- default options",
        "docs": "Options for mergify.",
        "name": "mergifyOptions",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "mergifyOptions",
        ],
        "switch": "mergify-options",
        "type": "MergifyOptions",
      },
      Object {
        "default": "- no \\"engines\\" specified",
        "docs": "Minimum Node.js version to require via package.json \`engines\` (inclusive).",
        "name": "minNodeVersion",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "minNodeVersion",
        ],
        "switch": "min-node-version",
        "type": "string",
      },
      Object {
        "default": "$BASEDIR",
        "docs": "This is the name of your package.",
        "name": "name",
        "parent": "NodeProjectOptions",
        "path": Array [
          "name",
        ],
        "switch": "name",
        "type": "string",
      },
      Object {
        "default": "\\"latest\\"",
        "docs": "The dist-tag to use when releasing to npm.",
        "name": "npmDistTag",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "npmDistTag",
        ],
        "switch": "npm-dist-tag",
        "type": "string",
      },
      Object {
        "docs": "Additional entries to .npmignore.",
        "name": "npmignore",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "npmignore",
        ],
        "switch": "npmignore",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Defines an .npmignore file. Normally this is only needed for libraries that are packaged as tarballs.",
        "name": "npmignoreEnabled",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "npmignoreEnabled",
        ],
        "switch": "npmignore-enabled",
        "type": "boolean",
      },
      Object {
        "default": "\\"registry.npmjs.org\\"",
        "docs": "The registry url to use when releasing packages.",
        "name": "npmRegistry",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "npmRegistry",
        ],
        "switch": "npm-registry",
        "type": "string",
      },
      Object {
        "default": "NpmTaskExecution.PROJEN",
        "docs": "Determines how tasks are executed when invoked as npm scripts (yarn/npm run xyz).",
        "name": "npmTaskExecution",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "npmTaskExecution",
        ],
        "switch": "npm-task-execution",
        "type": "NpmTaskExecution",
      },
      Object {
        "default": "\\".\\"",
        "docs": "The root directory of the project.",
        "name": "outdir",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "outdir",
        ],
        "switch": "outdir",
        "type": "string",
      },
      Object {
        "default": "NodePackageManager.YARN",
        "docs": "The Node Package Manager used to execute scripts.",
        "name": "packageManager",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "packageManager",
        ],
        "switch": "package-manager",
        "type": "NodePackageManager",
      },
      Object {
        "docs": "The parent project, if this project is part of a bigger project.",
        "name": "parent",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "parent",
        ],
        "switch": "parent",
        "type": "Project",
      },
      Object {
        "docs": "Options for \`peerDeps\`.",
        "name": "peerDependencyOptions",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "peerDependencyOptions",
        ],
        "switch": "peer-dependency-options",
        "type": "PeerDependencyOptions",
      },
      Object {
        "default": "[]",
        "docs": "Peer dependencies for this module.",
        "name": "peerDeps",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "peerDeps",
        ],
        "switch": "peer-deps",
        "type": "unknown",
      },
      Object {
        "default": "ProjectType.UNKNOWN",
        "docs": "Which type of project this is (library/app).",
        "name": "projectType",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "projectType",
        ],
        "switch": "project-type",
        "type": "ProjectType",
      },
      Object {
        "default": "\\"npx projen\\"",
        "docs": "The shell command to use in order to run the projen CLI.",
        "name": "projenCommand",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenCommand",
        ],
        "switch": "projen-command",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Indicates of \\"projen\\" should be installed as a devDependency.",
        "name": "projenDevDependency",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenDevDependency",
        ],
        "switch": "projen-dev-dependency",
        "type": "boolean",
      },
      Object {
        "default": "- \\"true\\" if mergify auto-merge is enabled (default)",
        "docs": "Automatically merge projen upgrade PRs when build passes.",
        "name": "projenUpgradeAutoMerge",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenUpgradeAutoMerge",
        ],
        "switch": "projen-upgrade-auto-merge",
        "type": "boolean",
      },
      Object {
        "default": "[ \\"0 6 * * *\\" ]",
        "docs": "Customize the projenUpgrade schedule in cron expression.",
        "name": "projenUpgradeSchedule",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenUpgradeSchedule",
        ],
        "switch": "projen-upgrade-schedule",
        "type": "unknown",
      },
      Object {
        "default": "- no automatic projen upgrade pull requests",
        "docs": "Periodically submits a pull request for projen upgrades (executes \`yarn projen:upgrade\`).",
        "name": "projenUpgradeSecret",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenUpgradeSecret",
        ],
        "switch": "projen-upgrade-secret",
        "type": "string",
      },
      Object {
        "default": "Semver.latest()",
        "docs": "Version of projen to install.",
        "name": "projenVersion",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenVersion",
        ],
        "switch": "projen-version",
        "type": "Semver",
      },
      Object {
        "default": "true",
        "docs": "Include a GitHub pull request template.",
        "name": "pullRequestTemplate",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "pullRequestTemplate",
        ],
        "switch": "pull-request-template",
        "type": "boolean",
      },
      Object {
        "default": "- default content",
        "docs": "The contents of the pull request template.",
        "name": "pullRequestTemplateContents",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "pullRequestTemplateContents",
        ],
        "switch": "pull-request-template-contents",
        "type": "string",
      },
      Object {
        "name": "readme",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "readme",
        ],
        "switch": "readme",
        "type": "string",
      },
      Object {
        "default": "- true if not a subproject",
        "docs": "Installs a GitHub workflow which is triggered when the comment \\"@projen rebuild\\" is added to a pull request.",
        "name": "rebuildBot",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "rebuildBot",
        ],
        "switch": "rebuild-bot",
        "type": "boolean",
      },
      Object {
        "default": "\\"rebuild\\"",
        "docs": "The pull request bot command to use in order to trigger a rebuild and commit of the contents of the branch.",
        "name": "rebuildBotCommand",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "rebuildBotCommand",
        ],
        "switch": "rebuild-bot-command",
        "type": "string",
      },
      Object {
        "default": "[ \\"master\\" ]",
        "docs": "Branches which trigger a release.",
        "name": "releaseBranches",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "releaseBranches",
        ],
        "switch": "release-branches",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Automatically release new versions every commit to one of branches in \`releaseBranches\`.",
        "name": "releaseEveryCommit",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "releaseEveryCommit",
        ],
        "switch": "release-every-commit",
        "type": "boolean",
      },
      Object {
        "default": "- no scheduled releases",
        "docs": "CRON schedule to trigger new releases.",
        "name": "releaseSchedule",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "releaseSchedule",
        ],
        "switch": "release-schedule",
        "type": "string",
      },
      Object {
        "default": "false",
        "docs": "Automatically release to npm when new versions are introduced.",
        "name": "releaseToNpm",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "releaseToNpm",
        ],
        "switch": "release-to-npm",
        "type": "boolean",
      },
      Object {
        "default": "- true if not a subproject",
        "docs": "Define a GitHub workflow for releasing from \\"master\\" when new versions are bumped.",
        "name": "releaseWorkflow",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "releaseWorkflow",
        ],
        "switch": "release-workflow",
        "type": "boolean",
      },
      Object {
        "docs": "The repository is the location where the actual code for your package lives.",
        "name": "repository",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "repository",
        ],
        "switch": "repository",
        "type": "string",
      },
      Object {
        "docs": "If the package.json for your package is not in the root directory (for example if it is part of a monorepo), you can specify the directory in which it lives.",
        "name": "repositoryDirectory",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "repositoryDirectory",
        ],
        "switch": "repository-directory",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Generate one-time sample in \`src/\` and \`public/\` if there are no files there.",
        "name": "sampleCode",
        "optional": true,
        "parent": "ReactProjectOptions",
        "path": Array [
          "sampleCode",
        ],
        "switch": "sample-code",
        "type": "boolean",
      },
      Object {
        "default": "{}",
        "docs": "npm scripts to include.",
        "name": "scripts",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "scripts",
        ],
        "switch": "scripts",
        "type": "unknown",
      },
      Object {
        "default": "\\"src\\"",
        "docs": "Typescript sources directory.",
        "name": "srcdir",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "srcdir",
        ],
        "switch": "srcdir",
        "type": "string",
      },
      Object {
        "docs": "Package's Stability.",
        "name": "stability",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "stability",
        ],
        "switch": "stability",
        "type": "string",
      },
      Object {
        "default": "\\"test\\"",
        "docs": "Tests directory.",
        "name": "testdir",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "testdir",
        ],
        "switch": "testdir",
        "type": "string",
      },
      Object {
        "default": "\\"yarn install --frozen-lockfile && yarn projen\\"",
        "docs": "Workflow steps to use in order to bootstrap this repo.",
        "name": "workflowBootstrapSteps",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "workflowBootstrapSteps",
        ],
        "switch": "workflow-bootstrap-steps",
        "type": "unknown",
      },
      Object {
        "default": "- default image",
        "docs": "Container image to use for GitHub workflows.",
        "name": "workflowContainerImage",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "workflowContainerImage",
        ],
        "switch": "workflow-container-image",
        "type": "string",
      },
      Object {
        "default": "- same as \`minNodeVersion\`",
        "docs": "The node version to use in GitHub workflows.",
        "name": "workflowNodeVersion",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "workflowNodeVersion",
        ],
        "switch": "workflow-node-version",
        "type": "string",
      },
    ],
    "pjid": "react",
    "typename": "web.ReactProject",
  },
  Object {
    "docs": "React project with TypeScript.",
    "docsurl": "https://github.com/projen/projen/blob/master/API.md#projen-web.reacttypescriptproject",
    "fqn": "projen.web.ReactTypeScriptProject",
    "moduleName": "projen",
    "options": Array [
      Object {
        "default": "true",
        "docs": "Allow the project to include \`peerDependencies\` and \`bundledDependencies\`.",
        "name": "allowLibraryDependencies",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "allowLibraryDependencies",
        ],
        "switch": "allow-library-dependencies",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Checks that after build there are no modified files on git.",
        "name": "antitamper",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "antitamper",
        ],
        "switch": "antitamper",
        "type": "boolean",
      },
      Object {
        "docs": "Author's e-mail.",
        "name": "authorEmail",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "authorEmail",
        ],
        "switch": "author-email",
        "type": "string",
      },
      Object {
        "docs": "Author's name.",
        "name": "authorName",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "authorName",
        ],
        "switch": "author-name",
        "type": "string",
      },
      Object {
        "docs": "Author's Organization.",
        "name": "authorOrganization",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "authorOrganization",
        ],
        "switch": "author-organization",
        "type": "boolean",
      },
      Object {
        "docs": "Author's URL / Website.",
        "name": "authorUrl",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "authorUrl",
        ],
        "switch": "author-url",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Automatically add all executables under the \`bin\` directory to your \`package.json\` file under the \`bin\` section.",
        "name": "autoDetectBin",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "autoDetectBin",
        ],
        "switch": "auto-detect-bin",
        "type": "boolean",
      },
      Object {
        "docs": "Binary programs vended with your module.",
        "name": "bin",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "bin",
        ],
        "switch": "bin",
        "type": "unknown",
      },
      Object {
        "default": "- true if not a subproject",
        "docs": "Define a GitHub workflow for building PRs.",
        "name": "buildWorkflow",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "buildWorkflow",
        ],
        "switch": "build-workflow",
        "type": "boolean",
      },
      Object {
        "docs": "List of dependencies to bundle into this module.",
        "name": "bundledDeps",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "bundledDeps",
        ],
        "switch": "bundled-deps",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Add a \`clobber\` task which resets the repo to origin.",
        "name": "clobber",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "clobber",
        ],
        "switch": "clobber",
        "type": "boolean",
      },
      Object {
        "default": "false",
        "docs": "Define a GitHub workflow step for sending code coverage metrics to https://codecov.io/ Uses codecov/codecov-action@v1 A secret is required for private repos. Configured with @codeCovTokenSecret.",
        "name": "codeCov",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "codeCov",
        ],
        "switch": "code-cov",
        "type": "boolean",
      },
      Object {
        "default": "- if this option is not specified, only public repositories are supported",
        "docs": "Define the secret name for a specified https://codecov.io/ token A secret is required to send coverage for private repositories.",
        "name": "codeCovTokenSecret",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "codeCovTokenSecret",
        ],
        "switch": "code-cov-token-secret",
        "type": "string",
      },
      Object {
        "default": "- the default behavior is to delete the lib/ directory and run
jest typescript tests and only if all tests pass, run the compiler.",
        "docs": "Compile the code before running tests.",
        "name": "compileBeforeTest",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "compileBeforeTest",
        ],
        "switch": "compile-before-test",
        "type": "boolean",
      },
      Object {
        "default": "- defaults to the value of authorName or \\"\\" if \`authorName\` is undefined.",
        "docs": "License copyright owner.",
        "name": "copyrightOwner",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "copyrightOwner",
        ],
        "switch": "copyright-owner",
        "type": "string",
      },
      Object {
        "default": "- current year",
        "docs": "The copyright years to put in the LICENSE file.",
        "name": "copyrightPeriod",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "copyrightPeriod",
        ],
        "switch": "copyright-period",
        "type": "string",
      },
      Object {
        "default": "\\"master\\"",
        "docs": "The name of the main release branch.",
        "name": "defaultReleaseBranch",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "defaultReleaseBranch",
        ],
        "switch": "default-release-branch",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Include dependabot configuration.",
        "name": "dependabot",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "dependabot",
        ],
        "switch": "dependabot",
        "type": "boolean",
      },
      Object {
        "default": "- default options",
        "docs": "Options for dependabot.",
        "name": "dependabotOptions",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "dependabotOptions",
        ],
        "switch": "dependabot-options",
        "type": "DependabotOptions",
      },
      Object {
        "default": "[]",
        "docs": "Runtime dependencies of this module.",
        "name": "deps",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "deps",
        ],
        "switch": "deps",
        "type": "unknown",
      },
      Object {
        "docs": "The description is just a string that helps people understand the purpose of the package.",
        "name": "description",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "description",
        ],
        "switch": "description",
        "type": "string",
      },
      Object {
        "default": "[]",
        "docs": "Build dependencies for this module.",
        "name": "devDeps",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "devDeps",
        ],
        "switch": "dev-deps",
        "type": "unknown",
      },
      Object {
        "default": "false",
        "docs": "Do not generate a \`tsconfig.json\` file (used by jsii projects since tsconfig.json is generated by the jsii compiler).",
        "name": "disableTsconfig",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "disableTsconfig",
        ],
        "switch": "disable-tsconfig",
        "type": "boolean",
      },
      Object {
        "default": "false",
        "docs": "Docgen by Typedoc.",
        "name": "docgen",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "docgen",
        ],
        "switch": "docgen",
        "type": "boolean",
      },
      Object {
        "default": "\\"docs\\"",
        "docs": "Docs directory.",
        "name": "docsDirectory",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "docsDirectory",
        ],
        "switch": "docs-directory",
        "type": "string",
      },
      Object {
        "default": "\\"lib/index.js\\"",
        "docs": "Module entrypoint (\`main\` in \`package.json\`).",
        "name": "entrypoint",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "entrypoint",
        ],
        "switch": "entrypoint",
        "type": "string",
      },
      Object {
        "default": "- .d.ts file derived from the project's entrypoint (usually lib/index.d.ts)",
        "docs": "The .d.ts file that includes the type declarations for this module.",
        "name": "entrypointTypes",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "entrypointTypes",
        ],
        "switch": "entrypoint-types",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Setup eslint.",
        "name": "eslint",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "eslint",
        ],
        "switch": "eslint",
        "type": "boolean",
      },
      Object {
        "default": "- opinionated default options",
        "docs": "Eslint options.",
        "name": "eslintOptions",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "eslintOptions",
        ],
        "switch": "eslint-options",
        "type": "EslintOptions",
      },
      Object {
        "docs": "Additional entries to .gitignore.",
        "name": "gitignore",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "gitignore",
        ],
        "switch": "gitignore",
        "type": "unknown",
      },
      Object {
        "default": "false",
        "docs": "Adds a gitpod configuration.",
        "name": "gitpod",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "gitpod",
        ],
        "switch": "gitpod",
        "type": "boolean",
      },
      Object {
        "docs": "Package's Homepage / Website.",
        "name": "homepage",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "homepage",
        ],
        "switch": "homepage",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Setup jest unit tests.",
        "name": "jest",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "jest",
        ],
        "switch": "jest",
        "type": "boolean",
      },
      Object {
        "default": "- default options",
        "docs": "Jest options.",
        "name": "jestOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "jestOptions",
        ],
        "switch": "jest-options",
        "type": "JestOptions",
      },
      Object {
        "docs": "Keywords to include in \`package.json\`.",
        "name": "keywords",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "keywords",
        ],
        "switch": "keywords",
        "type": "unknown",
      },
      Object {
        "default": "\\"lib\\"",
        "docs": "Compiler artifacts output directory.",
        "name": "libdir",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "libdir",
        ],
        "switch": "libdir",
        "type": "string",
      },
      Object {
        "docs": "License's SPDX identifier.",
        "name": "license",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "license",
        ],
        "switch": "license",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Indicates if a license should be added.",
        "name": "licensed",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "licensed",
        ],
        "switch": "licensed",
        "type": "boolean",
      },
      Object {
        "default": "- no max",
        "docs": "Minimum node.js version to require via \`engines\` (inclusive).",
        "name": "maxNodeVersion",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "maxNodeVersion",
        ],
        "switch": "max-node-version",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Adds mergify configuration.",
        "name": "mergify",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "mergify",
        ],
        "switch": "mergify",
        "type": "boolean",
      },
      Object {
        "default": "\\"auto-merge\\"",
        "docs": "Automatically merge PRs that build successfully and have this label.",
        "name": "mergifyAutoMergeLabel",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "mergifyAutoMergeLabel",
        ],
        "switch": "mergify-auto-merge-label",
        "type": "string",
      },
      Object {
        "default": "- default options",
        "docs": "Options for mergify.",
        "name": "mergifyOptions",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "mergifyOptions",
        ],
        "switch": "mergify-options",
        "type": "MergifyOptions",
      },
      Object {
        "default": "- no \\"engines\\" specified",
        "docs": "Minimum Node.js version to require via package.json \`engines\` (inclusive).",
        "name": "minNodeVersion",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "minNodeVersion",
        ],
        "switch": "min-node-version",
        "type": "string",
      },
      Object {
        "default": "$BASEDIR",
        "docs": "This is the name of your package.",
        "name": "name",
        "parent": "NodeProjectOptions",
        "path": Array [
          "name",
        ],
        "switch": "name",
        "type": "string",
      },
      Object {
        "default": "\\"latest\\"",
        "docs": "The dist-tag to use when releasing to npm.",
        "name": "npmDistTag",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "npmDistTag",
        ],
        "switch": "npm-dist-tag",
        "type": "string",
      },
      Object {
        "docs": "Additional entries to .npmignore.",
        "name": "npmignore",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "npmignore",
        ],
        "switch": "npmignore",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Defines an .npmignore file. Normally this is only needed for libraries that are packaged as tarballs.",
        "name": "npmignoreEnabled",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "npmignoreEnabled",
        ],
        "switch": "npmignore-enabled",
        "type": "boolean",
      },
      Object {
        "default": "\\"registry.npmjs.org\\"",
        "docs": "The registry url to use when releasing packages.",
        "name": "npmRegistry",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "npmRegistry",
        ],
        "switch": "npm-registry",
        "type": "string",
      },
      Object {
        "default": "NpmTaskExecution.PROJEN",
        "docs": "Determines how tasks are executed when invoked as npm scripts (yarn/npm run xyz).",
        "name": "npmTaskExecution",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "npmTaskExecution",
        ],
        "switch": "npm-task-execution",
        "type": "NpmTaskExecution",
      },
      Object {
        "default": "\\".\\"",
        "docs": "The root directory of the project.",
        "name": "outdir",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "outdir",
        ],
        "switch": "outdir",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Defines a \`yarn package\` command that will produce a tarball and place it under \`dist/js\`.",
        "name": "package",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "package",
        ],
        "switch": "package",
        "type": "boolean",
      },
      Object {
        "default": "NodePackageManager.YARN",
        "docs": "The Node Package Manager used to execute scripts.",
        "name": "packageManager",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "packageManager",
        ],
        "switch": "package-manager",
        "type": "NodePackageManager",
      },
      Object {
        "docs": "The parent project, if this project is part of a bigger project.",
        "name": "parent",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "parent",
        ],
        "switch": "parent",
        "type": "Project",
      },
      Object {
        "docs": "Options for \`peerDeps\`.",
        "name": "peerDependencyOptions",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "peerDependencyOptions",
        ],
        "switch": "peer-dependency-options",
        "type": "PeerDependencyOptions",
      },
      Object {
        "default": "[]",
        "docs": "Peer dependencies for this module.",
        "name": "peerDeps",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "peerDeps",
        ],
        "switch": "peer-deps",
        "type": "unknown",
      },
      Object {
        "default": "ProjectType.UNKNOWN",
        "docs": "Which type of project this is (library/app).",
        "name": "projectType",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "projectType",
        ],
        "switch": "project-type",
        "type": "ProjectType",
      },
      Object {
        "default": "\\"npx projen\\"",
        "docs": "The shell command to use in order to run the projen CLI.",
        "name": "projenCommand",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenCommand",
        ],
        "switch": "projen-command",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Indicates of \\"projen\\" should be installed as a devDependency.",
        "name": "projenDevDependency",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenDevDependency",
        ],
        "switch": "projen-dev-dependency",
        "type": "boolean",
      },
      Object {
        "default": "- \\"true\\" if mergify auto-merge is enabled (default)",
        "docs": "Automatically merge projen upgrade PRs when build passes.",
        "name": "projenUpgradeAutoMerge",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenUpgradeAutoMerge",
        ],
        "switch": "projen-upgrade-auto-merge",
        "type": "boolean",
      },
      Object {
        "default": "[ \\"0 6 * * *\\" ]",
        "docs": "Customize the projenUpgrade schedule in cron expression.",
        "name": "projenUpgradeSchedule",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenUpgradeSchedule",
        ],
        "switch": "projen-upgrade-schedule",
        "type": "unknown",
      },
      Object {
        "default": "- no automatic projen upgrade pull requests",
        "docs": "Periodically submits a pull request for projen upgrades (executes \`yarn projen:upgrade\`).",
        "name": "projenUpgradeSecret",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenUpgradeSecret",
        ],
        "switch": "projen-upgrade-secret",
        "type": "string",
      },
      Object {
        "default": "Semver.latest()",
        "docs": "Version of projen to install.",
        "name": "projenVersion",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenVersion",
        ],
        "switch": "projen-version",
        "type": "Semver",
      },
      Object {
        "default": "true",
        "docs": "Include a GitHub pull request template.",
        "name": "pullRequestTemplate",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "pullRequestTemplate",
        ],
        "switch": "pull-request-template",
        "type": "boolean",
      },
      Object {
        "default": "- default content",
        "docs": "The contents of the pull request template.",
        "name": "pullRequestTemplateContents",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "pullRequestTemplateContents",
        ],
        "switch": "pull-request-template-contents",
        "type": "string",
      },
      Object {
        "name": "readme",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "readme",
        ],
        "switch": "readme",
        "type": "string",
      },
      Object {
        "default": "- true if not a subproject",
        "docs": "Installs a GitHub workflow which is triggered when the comment \\"@projen rebuild\\" is added to a pull request.",
        "name": "rebuildBot",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "rebuildBot",
        ],
        "switch": "rebuild-bot",
        "type": "boolean",
      },
      Object {
        "default": "\\"rebuild\\"",
        "docs": "The pull request bot command to use in order to trigger a rebuild and commit of the contents of the branch.",
        "name": "rebuildBotCommand",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "rebuildBotCommand",
        ],
        "switch": "rebuild-bot-command",
        "type": "string",
      },
      Object {
        "default": "[ \\"master\\" ]",
        "docs": "Branches which trigger a release.",
        "name": "releaseBranches",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "releaseBranches",
        ],
        "switch": "release-branches",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Automatically release new versions every commit to one of branches in \`releaseBranches\`.",
        "name": "releaseEveryCommit",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "releaseEveryCommit",
        ],
        "switch": "release-every-commit",
        "type": "boolean",
      },
      Object {
        "default": "- no scheduled releases",
        "docs": "CRON schedule to trigger new releases.",
        "name": "releaseSchedule",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "releaseSchedule",
        ],
        "switch": "release-schedule",
        "type": "string",
      },
      Object {
        "default": "false",
        "docs": "Automatically release to npm when new versions are introduced.",
        "name": "releaseToNpm",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "releaseToNpm",
        ],
        "switch": "release-to-npm",
        "type": "boolean",
      },
      Object {
        "default": "- true if not a subproject",
        "docs": "Define a GitHub workflow for releasing from \\"master\\" when new versions are bumped.",
        "name": "releaseWorkflow",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "releaseWorkflow",
        ],
        "switch": "release-workflow",
        "type": "boolean",
      },
      Object {
        "docs": "The repository is the location where the actual code for your package lives.",
        "name": "repository",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "repository",
        ],
        "switch": "repository",
        "type": "string",
      },
      Object {
        "docs": "If the package.json for your package is not in the root directory (for example if it is part of a monorepo), you can specify the directory in which it lives.",
        "name": "repositoryDirectory",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "repositoryDirectory",
        ],
        "switch": "repository-directory",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Generate one-time sample in \`src/\` and \`test/\` if there are no files there.",
        "name": "sampleCode",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "sampleCode",
        ],
        "switch": "sample-code",
        "type": "boolean",
      },
      Object {
        "default": "{}",
        "docs": "npm scripts to include.",
        "name": "scripts",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "scripts",
        ],
        "switch": "scripts",
        "type": "unknown",
      },
      Object {
        "default": "\\"src\\"",
        "docs": "Typescript sources directory.",
        "name": "srcdir",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "srcdir",
        ],
        "switch": "srcdir",
        "type": "string",
      },
      Object {
        "docs": "Package's Stability.",
        "name": "stability",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "stability",
        ],
        "switch": "stability",
        "type": "string",
      },
      Object {
        "default": "\\"test\\"",
        "docs": "Tests directory.",
        "name": "testdir",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "testdir",
        ],
        "switch": "testdir",
        "type": "string",
      },
      Object {
        "docs": "Custom TSConfig.",
        "name": "tsconfig",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "tsconfig",
        ],
        "switch": "tsconfig",
        "type": "TypescriptConfigOptions",
      },
      Object {
        "default": "\\"^3.9.5\\"",
        "docs": "TypeScript version to use.",
        "name": "typescriptVersion",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "typescriptVersion",
        ],
        "switch": "typescript-version",
        "type": "string",
      },
      Object {
        "default": "\\"yarn install --frozen-lockfile && yarn projen\\"",
        "docs": "Workflow steps to use in order to bootstrap this repo.",
        "name": "workflowBootstrapSteps",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "workflowBootstrapSteps",
        ],
        "switch": "workflow-bootstrap-steps",
        "type": "unknown",
      },
      Object {
        "default": "- default image",
        "docs": "Container image to use for GitHub workflows.",
        "name": "workflowContainerImage",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "workflowContainerImage",
        ],
        "switch": "workflow-container-image",
        "type": "string",
      },
      Object {
        "default": "- same as \`minNodeVersion\`",
        "docs": "The node version to use in GitHub workflows.",
        "name": "workflowNodeVersion",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "workflowNodeVersion",
        ],
        "switch": "workflow-node-version",
        "type": "string",
      },
    ],
    "pjid": "react-ts",
    "typename": "web.ReactTypeScriptProject",
  },
  Object {
    "docs": "TypeScript project.",
    "docsurl": "https://github.com/projen/projen/blob/master/API.md#projen-typescriptproject",
    "fqn": "projen.TypeScriptProject",
    "moduleName": "projen",
    "options": Array [
      Object {
        "default": "true",
        "docs": "Allow the project to include \`peerDependencies\` and \`bundledDependencies\`.",
        "name": "allowLibraryDependencies",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "allowLibraryDependencies",
        ],
        "switch": "allow-library-dependencies",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Checks that after build there are no modified files on git.",
        "name": "antitamper",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "antitamper",
        ],
        "switch": "antitamper",
        "type": "boolean",
      },
      Object {
        "docs": "Author's e-mail.",
        "name": "authorEmail",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "authorEmail",
        ],
        "switch": "author-email",
        "type": "string",
      },
      Object {
        "docs": "Author's name.",
        "name": "authorName",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "authorName",
        ],
        "switch": "author-name",
        "type": "string",
      },
      Object {
        "docs": "Author's Organization.",
        "name": "authorOrganization",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "authorOrganization",
        ],
        "switch": "author-organization",
        "type": "boolean",
      },
      Object {
        "docs": "Author's URL / Website.",
        "name": "authorUrl",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "authorUrl",
        ],
        "switch": "author-url",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Automatically add all executables under the \`bin\` directory to your \`package.json\` file under the \`bin\` section.",
        "name": "autoDetectBin",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "autoDetectBin",
        ],
        "switch": "auto-detect-bin",
        "type": "boolean",
      },
      Object {
        "docs": "Binary programs vended with your module.",
        "name": "bin",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "bin",
        ],
        "switch": "bin",
        "type": "unknown",
      },
      Object {
        "default": "- true if not a subproject",
        "docs": "Define a GitHub workflow for building PRs.",
        "name": "buildWorkflow",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "buildWorkflow",
        ],
        "switch": "build-workflow",
        "type": "boolean",
      },
      Object {
        "docs": "List of dependencies to bundle into this module.",
        "name": "bundledDeps",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "bundledDeps",
        ],
        "switch": "bundled-deps",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Add a \`clobber\` task which resets the repo to origin.",
        "name": "clobber",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "clobber",
        ],
        "switch": "clobber",
        "type": "boolean",
      },
      Object {
        "default": "false",
        "docs": "Define a GitHub workflow step for sending code coverage metrics to https://codecov.io/ Uses codecov/codecov-action@v1 A secret is required for private repos. Configured with @codeCovTokenSecret.",
        "name": "codeCov",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "codeCov",
        ],
        "switch": "code-cov",
        "type": "boolean",
      },
      Object {
        "default": "- if this option is not specified, only public repositories are supported",
        "docs": "Define the secret name for a specified https://codecov.io/ token A secret is required to send coverage for private repositories.",
        "name": "codeCovTokenSecret",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "codeCovTokenSecret",
        ],
        "switch": "code-cov-token-secret",
        "type": "string",
      },
      Object {
        "default": "- the default behavior is to delete the lib/ directory and run
jest typescript tests and only if all tests pass, run the compiler.",
        "docs": "Compile the code before running tests.",
        "name": "compileBeforeTest",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "compileBeforeTest",
        ],
        "switch": "compile-before-test",
        "type": "boolean",
      },
      Object {
        "default": "- defaults to the value of authorName or \\"\\" if \`authorName\` is undefined.",
        "docs": "License copyright owner.",
        "name": "copyrightOwner",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "copyrightOwner",
        ],
        "switch": "copyright-owner",
        "type": "string",
      },
      Object {
        "default": "- current year",
        "docs": "The copyright years to put in the LICENSE file.",
        "name": "copyrightPeriod",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "copyrightPeriod",
        ],
        "switch": "copyright-period",
        "type": "string",
      },
      Object {
        "default": "\\"master\\"",
        "docs": "The name of the main release branch.",
        "name": "defaultReleaseBranch",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "defaultReleaseBranch",
        ],
        "switch": "default-release-branch",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Include dependabot configuration.",
        "name": "dependabot",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "dependabot",
        ],
        "switch": "dependabot",
        "type": "boolean",
      },
      Object {
        "default": "- default options",
        "docs": "Options for dependabot.",
        "name": "dependabotOptions",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "dependabotOptions",
        ],
        "switch": "dependabot-options",
        "type": "DependabotOptions",
      },
      Object {
        "default": "[]",
        "docs": "Runtime dependencies of this module.",
        "name": "deps",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "deps",
        ],
        "switch": "deps",
        "type": "unknown",
      },
      Object {
        "docs": "The description is just a string that helps people understand the purpose of the package.",
        "name": "description",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "description",
        ],
        "switch": "description",
        "type": "string",
      },
      Object {
        "default": "[]",
        "docs": "Build dependencies for this module.",
        "name": "devDeps",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "devDeps",
        ],
        "switch": "dev-deps",
        "type": "unknown",
      },
      Object {
        "default": "false",
        "docs": "Do not generate a \`tsconfig.json\` file (used by jsii projects since tsconfig.json is generated by the jsii compiler).",
        "name": "disableTsconfig",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "disableTsconfig",
        ],
        "switch": "disable-tsconfig",
        "type": "boolean",
      },
      Object {
        "default": "false",
        "docs": "Docgen by Typedoc.",
        "name": "docgen",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "docgen",
        ],
        "switch": "docgen",
        "type": "boolean",
      },
      Object {
        "default": "\\"docs\\"",
        "docs": "Docs directory.",
        "name": "docsDirectory",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "docsDirectory",
        ],
        "switch": "docs-directory",
        "type": "string",
      },
      Object {
        "default": "\\"lib/index.js\\"",
        "docs": "Module entrypoint (\`main\` in \`package.json\`).",
        "name": "entrypoint",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "entrypoint",
        ],
        "switch": "entrypoint",
        "type": "string",
      },
      Object {
        "default": "- .d.ts file derived from the project's entrypoint (usually lib/index.d.ts)",
        "docs": "The .d.ts file that includes the type declarations for this module.",
        "name": "entrypointTypes",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "entrypointTypes",
        ],
        "switch": "entrypoint-types",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Setup eslint.",
        "name": "eslint",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "eslint",
        ],
        "switch": "eslint",
        "type": "boolean",
      },
      Object {
        "default": "- opinionated default options",
        "docs": "Eslint options.",
        "name": "eslintOptions",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "eslintOptions",
        ],
        "switch": "eslint-options",
        "type": "EslintOptions",
      },
      Object {
        "docs": "Additional entries to .gitignore.",
        "name": "gitignore",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "gitignore",
        ],
        "switch": "gitignore",
        "type": "unknown",
      },
      Object {
        "default": "false",
        "docs": "Adds a gitpod configuration.",
        "name": "gitpod",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "gitpod",
        ],
        "switch": "gitpod",
        "type": "boolean",
      },
      Object {
        "docs": "Package's Homepage / Website.",
        "name": "homepage",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "homepage",
        ],
        "switch": "homepage",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Setup jest unit tests.",
        "name": "jest",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "jest",
        ],
        "switch": "jest",
        "type": "boolean",
      },
      Object {
        "default": "- default options",
        "docs": "Jest options.",
        "name": "jestOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "jestOptions",
        ],
        "switch": "jest-options",
        "type": "JestOptions",
      },
      Object {
        "docs": "Keywords to include in \`package.json\`.",
        "name": "keywords",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "keywords",
        ],
        "switch": "keywords",
        "type": "unknown",
      },
      Object {
        "default": "\\"lib\\"",
        "docs": "Compiler artifacts output directory.",
        "name": "libdir",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "libdir",
        ],
        "switch": "libdir",
        "type": "string",
      },
      Object {
        "docs": "License's SPDX identifier.",
        "name": "license",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "license",
        ],
        "switch": "license",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Indicates if a license should be added.",
        "name": "licensed",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "licensed",
        ],
        "switch": "licensed",
        "type": "boolean",
      },
      Object {
        "default": "- no max",
        "docs": "Minimum node.js version to require via \`engines\` (inclusive).",
        "name": "maxNodeVersion",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "maxNodeVersion",
        ],
        "switch": "max-node-version",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Adds mergify configuration.",
        "name": "mergify",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "mergify",
        ],
        "switch": "mergify",
        "type": "boolean",
      },
      Object {
        "default": "\\"auto-merge\\"",
        "docs": "Automatically merge PRs that build successfully and have this label.",
        "name": "mergifyAutoMergeLabel",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "mergifyAutoMergeLabel",
        ],
        "switch": "mergify-auto-merge-label",
        "type": "string",
      },
      Object {
        "default": "- default options",
        "docs": "Options for mergify.",
        "name": "mergifyOptions",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "mergifyOptions",
        ],
        "switch": "mergify-options",
        "type": "MergifyOptions",
      },
      Object {
        "default": "- no \\"engines\\" specified",
        "docs": "Minimum Node.js version to require via package.json \`engines\` (inclusive).",
        "name": "minNodeVersion",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "minNodeVersion",
        ],
        "switch": "min-node-version",
        "type": "string",
      },
      Object {
        "default": "$BASEDIR",
        "docs": "This is the name of your package.",
        "name": "name",
        "parent": "NodeProjectOptions",
        "path": Array [
          "name",
        ],
        "switch": "name",
        "type": "string",
      },
      Object {
        "default": "\\"latest\\"",
        "docs": "The dist-tag to use when releasing to npm.",
        "name": "npmDistTag",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "npmDistTag",
        ],
        "switch": "npm-dist-tag",
        "type": "string",
      },
      Object {
        "docs": "Additional entries to .npmignore.",
        "name": "npmignore",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "npmignore",
        ],
        "switch": "npmignore",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Defines an .npmignore file. Normally this is only needed for libraries that are packaged as tarballs.",
        "name": "npmignoreEnabled",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "npmignoreEnabled",
        ],
        "switch": "npmignore-enabled",
        "type": "boolean",
      },
      Object {
        "default": "\\"registry.npmjs.org\\"",
        "docs": "The registry url to use when releasing packages.",
        "name": "npmRegistry",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "npmRegistry",
        ],
        "switch": "npm-registry",
        "type": "string",
      },
      Object {
        "default": "NpmTaskExecution.PROJEN",
        "docs": "Determines how tasks are executed when invoked as npm scripts (yarn/npm run xyz).",
        "name": "npmTaskExecution",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "npmTaskExecution",
        ],
        "switch": "npm-task-execution",
        "type": "NpmTaskExecution",
      },
      Object {
        "default": "\\".\\"",
        "docs": "The root directory of the project.",
        "name": "outdir",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "outdir",
        ],
        "switch": "outdir",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Defines a \`yarn package\` command that will produce a tarball and place it under \`dist/js\`.",
        "name": "package",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "package",
        ],
        "switch": "package",
        "type": "boolean",
      },
      Object {
        "default": "NodePackageManager.YARN",
        "docs": "The Node Package Manager used to execute scripts.",
        "name": "packageManager",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "packageManager",
        ],
        "switch": "package-manager",
        "type": "NodePackageManager",
      },
      Object {
        "docs": "The parent project, if this project is part of a bigger project.",
        "name": "parent",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "parent",
        ],
        "switch": "parent",
        "type": "Project",
      },
      Object {
        "docs": "Options for \`peerDeps\`.",
        "name": "peerDependencyOptions",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "peerDependencyOptions",
        ],
        "switch": "peer-dependency-options",
        "type": "PeerDependencyOptions",
      },
      Object {
        "default": "[]",
        "docs": "Peer dependencies for this module.",
        "name": "peerDeps",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "peerDeps",
        ],
        "switch": "peer-deps",
        "type": "unknown",
      },
      Object {
        "default": "ProjectType.UNKNOWN",
        "docs": "Which type of project this is (library/app).",
        "name": "projectType",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "projectType",
        ],
        "switch": "project-type",
        "type": "ProjectType",
      },
      Object {
        "default": "\\"npx projen\\"",
        "docs": "The shell command to use in order to run the projen CLI.",
        "name": "projenCommand",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenCommand",
        ],
        "switch": "projen-command",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Indicates of \\"projen\\" should be installed as a devDependency.",
        "name": "projenDevDependency",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenDevDependency",
        ],
        "switch": "projen-dev-dependency",
        "type": "boolean",
      },
      Object {
        "default": "- \\"true\\" if mergify auto-merge is enabled (default)",
        "docs": "Automatically merge projen upgrade PRs when build passes.",
        "name": "projenUpgradeAutoMerge",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenUpgradeAutoMerge",
        ],
        "switch": "projen-upgrade-auto-merge",
        "type": "boolean",
      },
      Object {
        "default": "[ \\"0 6 * * *\\" ]",
        "docs": "Customize the projenUpgrade schedule in cron expression.",
        "name": "projenUpgradeSchedule",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenUpgradeSchedule",
        ],
        "switch": "projen-upgrade-schedule",
        "type": "unknown",
      },
      Object {
        "default": "- no automatic projen upgrade pull requests",
        "docs": "Periodically submits a pull request for projen upgrades (executes \`yarn projen:upgrade\`).",
        "name": "projenUpgradeSecret",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenUpgradeSecret",
        ],
        "switch": "projen-upgrade-secret",
        "type": "string",
      },
      Object {
        "default": "Semver.latest()",
        "docs": "Version of projen to install.",
        "name": "projenVersion",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenVersion",
        ],
        "switch": "projen-version",
        "type": "Semver",
      },
      Object {
        "default": "true",
        "docs": "Include a GitHub pull request template.",
        "name": "pullRequestTemplate",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "pullRequestTemplate",
        ],
        "switch": "pull-request-template",
        "type": "boolean",
      },
      Object {
        "default": "- default content",
        "docs": "The contents of the pull request template.",
        "name": "pullRequestTemplateContents",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "pullRequestTemplateContents",
        ],
        "switch": "pull-request-template-contents",
        "type": "string",
      },
      Object {
        "name": "readme",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "readme",
        ],
        "switch": "readme",
        "type": "string",
      },
      Object {
        "default": "- true if not a subproject",
        "docs": "Installs a GitHub workflow which is triggered when the comment \\"@projen rebuild\\" is added to a pull request.",
        "name": "rebuildBot",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "rebuildBot",
        ],
        "switch": "rebuild-bot",
        "type": "boolean",
      },
      Object {
        "default": "\\"rebuild\\"",
        "docs": "The pull request bot command to use in order to trigger a rebuild and commit of the contents of the branch.",
        "name": "rebuildBotCommand",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "rebuildBotCommand",
        ],
        "switch": "rebuild-bot-command",
        "type": "string",
      },
      Object {
        "default": "[ \\"master\\" ]",
        "docs": "Branches which trigger a release.",
        "name": "releaseBranches",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "releaseBranches",
        ],
        "switch": "release-branches",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Automatically release new versions every commit to one of branches in \`releaseBranches\`.",
        "name": "releaseEveryCommit",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "releaseEveryCommit",
        ],
        "switch": "release-every-commit",
        "type": "boolean",
      },
      Object {
        "default": "- no scheduled releases",
        "docs": "CRON schedule to trigger new releases.",
        "name": "releaseSchedule",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "releaseSchedule",
        ],
        "switch": "release-schedule",
        "type": "string",
      },
      Object {
        "default": "false",
        "docs": "Automatically release to npm when new versions are introduced.",
        "name": "releaseToNpm",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "releaseToNpm",
        ],
        "switch": "release-to-npm",
        "type": "boolean",
      },
      Object {
        "default": "- true if not a subproject",
        "docs": "Define a GitHub workflow for releasing from \\"master\\" when new versions are bumped.",
        "name": "releaseWorkflow",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "releaseWorkflow",
        ],
        "switch": "release-workflow",
        "type": "boolean",
      },
      Object {
        "docs": "The repository is the location where the actual code for your package lives.",
        "name": "repository",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "repository",
        ],
        "switch": "repository",
        "type": "string",
      },
      Object {
        "docs": "If the package.json for your package is not in the root directory (for example if it is part of a monorepo), you can specify the directory in which it lives.",
        "name": "repositoryDirectory",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "repositoryDirectory",
        ],
        "switch": "repository-directory",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Generate one-time sample in \`src/\` and \`test/\` if there are no files there.",
        "name": "sampleCode",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "sampleCode",
        ],
        "switch": "sample-code",
        "type": "boolean",
      },
      Object {
        "default": "{}",
        "docs": "npm scripts to include.",
        "name": "scripts",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "scripts",
        ],
        "switch": "scripts",
        "type": "unknown",
      },
      Object {
        "default": "\\"src\\"",
        "docs": "Typescript sources directory.",
        "name": "srcdir",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "srcdir",
        ],
        "switch": "srcdir",
        "type": "string",
      },
      Object {
        "docs": "Package's Stability.",
        "name": "stability",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "stability",
        ],
        "switch": "stability",
        "type": "string",
      },
      Object {
        "default": "\\"test\\"",
        "docs": "Tests directory.",
        "name": "testdir",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "testdir",
        ],
        "switch": "testdir",
        "type": "string",
      },
      Object {
        "docs": "Custom TSConfig.",
        "name": "tsconfig",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "tsconfig",
        ],
        "switch": "tsconfig",
        "type": "TypescriptConfigOptions",
      },
      Object {
        "default": "\\"^3.9.5\\"",
        "docs": "TypeScript version to use.",
        "name": "typescriptVersion",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "typescriptVersion",
        ],
        "switch": "typescript-version",
        "type": "string",
      },
      Object {
        "default": "\\"yarn install --frozen-lockfile && yarn projen\\"",
        "docs": "Workflow steps to use in order to bootstrap this repo.",
        "name": "workflowBootstrapSteps",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "workflowBootstrapSteps",
        ],
        "switch": "workflow-bootstrap-steps",
        "type": "unknown",
      },
      Object {
        "default": "- default image",
        "docs": "Container image to use for GitHub workflows.",
        "name": "workflowContainerImage",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "workflowContainerImage",
        ],
        "switch": "workflow-container-image",
        "type": "string",
      },
      Object {
        "default": "- same as \`minNodeVersion\`",
        "docs": "The node version to use in GitHub workflows.",
        "name": "workflowNodeVersion",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "workflowNodeVersion",
        ],
        "switch": "workflow-node-version",
        "type": "string",
      },
    ],
    "pjid": "typescript",
    "typename": "TypeScriptProject",
  },
  Object {
    "docs": "TypeScript app.",
    "docsurl": "https://github.com/projen/projen/blob/master/API.md#projen-typescriptappproject",
    "fqn": "projen.TypeScriptAppProject",
    "moduleName": "projen",
    "options": Array [
      Object {
        "default": "true",
        "docs": "Allow the project to include \`peerDependencies\` and \`bundledDependencies\`.",
        "name": "allowLibraryDependencies",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "allowLibraryDependencies",
        ],
        "switch": "allow-library-dependencies",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Checks that after build there are no modified files on git.",
        "name": "antitamper",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "antitamper",
        ],
        "switch": "antitamper",
        "type": "boolean",
      },
      Object {
        "docs": "Author's e-mail.",
        "name": "authorEmail",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "authorEmail",
        ],
        "switch": "author-email",
        "type": "string",
      },
      Object {
        "docs": "Author's name.",
        "name": "authorName",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "authorName",
        ],
        "switch": "author-name",
        "type": "string",
      },
      Object {
        "docs": "Author's Organization.",
        "name": "authorOrganization",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "authorOrganization",
        ],
        "switch": "author-organization",
        "type": "boolean",
      },
      Object {
        "docs": "Author's URL / Website.",
        "name": "authorUrl",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "authorUrl",
        ],
        "switch": "author-url",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Automatically add all executables under the \`bin\` directory to your \`package.json\` file under the \`bin\` section.",
        "name": "autoDetectBin",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "autoDetectBin",
        ],
        "switch": "auto-detect-bin",
        "type": "boolean",
      },
      Object {
        "docs": "Binary programs vended with your module.",
        "name": "bin",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "bin",
        ],
        "switch": "bin",
        "type": "unknown",
      },
      Object {
        "default": "- true if not a subproject",
        "docs": "Define a GitHub workflow for building PRs.",
        "name": "buildWorkflow",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "buildWorkflow",
        ],
        "switch": "build-workflow",
        "type": "boolean",
      },
      Object {
        "docs": "List of dependencies to bundle into this module.",
        "name": "bundledDeps",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "bundledDeps",
        ],
        "switch": "bundled-deps",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Add a \`clobber\` task which resets the repo to origin.",
        "name": "clobber",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "clobber",
        ],
        "switch": "clobber",
        "type": "boolean",
      },
      Object {
        "default": "false",
        "docs": "Define a GitHub workflow step for sending code coverage metrics to https://codecov.io/ Uses codecov/codecov-action@v1 A secret is required for private repos. Configured with @codeCovTokenSecret.",
        "name": "codeCov",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "codeCov",
        ],
        "switch": "code-cov",
        "type": "boolean",
      },
      Object {
        "default": "- if this option is not specified, only public repositories are supported",
        "docs": "Define the secret name for a specified https://codecov.io/ token A secret is required to send coverage for private repositories.",
        "name": "codeCovTokenSecret",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "codeCovTokenSecret",
        ],
        "switch": "code-cov-token-secret",
        "type": "string",
      },
      Object {
        "default": "- the default behavior is to delete the lib/ directory and run
jest typescript tests and only if all tests pass, run the compiler.",
        "docs": "Compile the code before running tests.",
        "name": "compileBeforeTest",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "compileBeforeTest",
        ],
        "switch": "compile-before-test",
        "type": "boolean",
      },
      Object {
        "default": "- defaults to the value of authorName or \\"\\" if \`authorName\` is undefined.",
        "docs": "License copyright owner.",
        "name": "copyrightOwner",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "copyrightOwner",
        ],
        "switch": "copyright-owner",
        "type": "string",
      },
      Object {
        "default": "- current year",
        "docs": "The copyright years to put in the LICENSE file.",
        "name": "copyrightPeriod",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "copyrightPeriod",
        ],
        "switch": "copyright-period",
        "type": "string",
      },
      Object {
        "default": "\\"master\\"",
        "docs": "The name of the main release branch.",
        "name": "defaultReleaseBranch",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "defaultReleaseBranch",
        ],
        "switch": "default-release-branch",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Include dependabot configuration.",
        "name": "dependabot",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "dependabot",
        ],
        "switch": "dependabot",
        "type": "boolean",
      },
      Object {
        "default": "- default options",
        "docs": "Options for dependabot.",
        "name": "dependabotOptions",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "dependabotOptions",
        ],
        "switch": "dependabot-options",
        "type": "DependabotOptions",
      },
      Object {
        "default": "[]",
        "docs": "Runtime dependencies of this module.",
        "name": "deps",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "deps",
        ],
        "switch": "deps",
        "type": "unknown",
      },
      Object {
        "docs": "The description is just a string that helps people understand the purpose of the package.",
        "name": "description",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "description",
        ],
        "switch": "description",
        "type": "string",
      },
      Object {
        "default": "[]",
        "docs": "Build dependencies for this module.",
        "name": "devDeps",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "devDeps",
        ],
        "switch": "dev-deps",
        "type": "unknown",
      },
      Object {
        "default": "false",
        "docs": "Do not generate a \`tsconfig.json\` file (used by jsii projects since tsconfig.json is generated by the jsii compiler).",
        "name": "disableTsconfig",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "disableTsconfig",
        ],
        "switch": "disable-tsconfig",
        "type": "boolean",
      },
      Object {
        "default": "false",
        "docs": "Docgen by Typedoc.",
        "name": "docgen",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "docgen",
        ],
        "switch": "docgen",
        "type": "boolean",
      },
      Object {
        "default": "\\"docs\\"",
        "docs": "Docs directory.",
        "name": "docsDirectory",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "docsDirectory",
        ],
        "switch": "docs-directory",
        "type": "string",
      },
      Object {
        "default": "\\"lib/index.js\\"",
        "docs": "Module entrypoint (\`main\` in \`package.json\`).",
        "name": "entrypoint",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "entrypoint",
        ],
        "switch": "entrypoint",
        "type": "string",
      },
      Object {
        "default": "- .d.ts file derived from the project's entrypoint (usually lib/index.d.ts)",
        "docs": "The .d.ts file that includes the type declarations for this module.",
        "name": "entrypointTypes",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "entrypointTypes",
        ],
        "switch": "entrypoint-types",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Setup eslint.",
        "name": "eslint",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "eslint",
        ],
        "switch": "eslint",
        "type": "boolean",
      },
      Object {
        "default": "- opinionated default options",
        "docs": "Eslint options.",
        "name": "eslintOptions",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "eslintOptions",
        ],
        "switch": "eslint-options",
        "type": "EslintOptions",
      },
      Object {
        "docs": "Additional entries to .gitignore.",
        "name": "gitignore",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "gitignore",
        ],
        "switch": "gitignore",
        "type": "unknown",
      },
      Object {
        "default": "false",
        "docs": "Adds a gitpod configuration.",
        "name": "gitpod",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "gitpod",
        ],
        "switch": "gitpod",
        "type": "boolean",
      },
      Object {
        "docs": "Package's Homepage / Website.",
        "name": "homepage",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "homepage",
        ],
        "switch": "homepage",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Setup jest unit tests.",
        "name": "jest",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "jest",
        ],
        "switch": "jest",
        "type": "boolean",
      },
      Object {
        "default": "- default options",
        "docs": "Jest options.",
        "name": "jestOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "jestOptions",
        ],
        "switch": "jest-options",
        "type": "JestOptions",
      },
      Object {
        "docs": "Keywords to include in \`package.json\`.",
        "name": "keywords",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "keywords",
        ],
        "switch": "keywords",
        "type": "unknown",
      },
      Object {
        "default": "\\"lib\\"",
        "docs": "Compiler artifacts output directory.",
        "name": "libdir",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "libdir",
        ],
        "switch": "libdir",
        "type": "string",
      },
      Object {
        "docs": "License's SPDX identifier.",
        "name": "license",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "license",
        ],
        "switch": "license",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Indicates if a license should be added.",
        "name": "licensed",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "licensed",
        ],
        "switch": "licensed",
        "type": "boolean",
      },
      Object {
        "default": "- no max",
        "docs": "Minimum node.js version to require via \`engines\` (inclusive).",
        "name": "maxNodeVersion",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "maxNodeVersion",
        ],
        "switch": "max-node-version",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Adds mergify configuration.",
        "name": "mergify",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "mergify",
        ],
        "switch": "mergify",
        "type": "boolean",
      },
      Object {
        "default": "\\"auto-merge\\"",
        "docs": "Automatically merge PRs that build successfully and have this label.",
        "name": "mergifyAutoMergeLabel",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "mergifyAutoMergeLabel",
        ],
        "switch": "mergify-auto-merge-label",
        "type": "string",
      },
      Object {
        "default": "- default options",
        "docs": "Options for mergify.",
        "name": "mergifyOptions",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "mergifyOptions",
        ],
        "switch": "mergify-options",
        "type": "MergifyOptions",
      },
      Object {
        "default": "- no \\"engines\\" specified",
        "docs": "Minimum Node.js version to require via package.json \`engines\` (inclusive).",
        "name": "minNodeVersion",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "minNodeVersion",
        ],
        "switch": "min-node-version",
        "type": "string",
      },
      Object {
        "default": "$BASEDIR",
        "docs": "This is the name of your package.",
        "name": "name",
        "parent": "NodeProjectOptions",
        "path": Array [
          "name",
        ],
        "switch": "name",
        "type": "string",
      },
      Object {
        "default": "\\"latest\\"",
        "docs": "The dist-tag to use when releasing to npm.",
        "name": "npmDistTag",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "npmDistTag",
        ],
        "switch": "npm-dist-tag",
        "type": "string",
      },
      Object {
        "docs": "Additional entries to .npmignore.",
        "name": "npmignore",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "npmignore",
        ],
        "switch": "npmignore",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Defines an .npmignore file. Normally this is only needed for libraries that are packaged as tarballs.",
        "name": "npmignoreEnabled",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "npmignoreEnabled",
        ],
        "switch": "npmignore-enabled",
        "type": "boolean",
      },
      Object {
        "default": "\\"registry.npmjs.org\\"",
        "docs": "The registry url to use when releasing packages.",
        "name": "npmRegistry",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "npmRegistry",
        ],
        "switch": "npm-registry",
        "type": "string",
      },
      Object {
        "default": "NpmTaskExecution.PROJEN",
        "docs": "Determines how tasks are executed when invoked as npm scripts (yarn/npm run xyz).",
        "name": "npmTaskExecution",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "npmTaskExecution",
        ],
        "switch": "npm-task-execution",
        "type": "NpmTaskExecution",
      },
      Object {
        "default": "\\".\\"",
        "docs": "The root directory of the project.",
        "name": "outdir",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "outdir",
        ],
        "switch": "outdir",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Defines a \`yarn package\` command that will produce a tarball and place it under \`dist/js\`.",
        "name": "package",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "package",
        ],
        "switch": "package",
        "type": "boolean",
      },
      Object {
        "default": "NodePackageManager.YARN",
        "docs": "The Node Package Manager used to execute scripts.",
        "name": "packageManager",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "packageManager",
        ],
        "switch": "package-manager",
        "type": "NodePackageManager",
      },
      Object {
        "docs": "The parent project, if this project is part of a bigger project.",
        "name": "parent",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "parent",
        ],
        "switch": "parent",
        "type": "Project",
      },
      Object {
        "docs": "Options for \`peerDeps\`.",
        "name": "peerDependencyOptions",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "peerDependencyOptions",
        ],
        "switch": "peer-dependency-options",
        "type": "PeerDependencyOptions",
      },
      Object {
        "default": "[]",
        "docs": "Peer dependencies for this module.",
        "name": "peerDeps",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "peerDeps",
        ],
        "switch": "peer-deps",
        "type": "unknown",
      },
      Object {
        "default": "ProjectType.UNKNOWN",
        "docs": "Which type of project this is (library/app).",
        "name": "projectType",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "projectType",
        ],
        "switch": "project-type",
        "type": "ProjectType",
      },
      Object {
        "default": "\\"npx projen\\"",
        "docs": "The shell command to use in order to run the projen CLI.",
        "name": "projenCommand",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenCommand",
        ],
        "switch": "projen-command",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Indicates of \\"projen\\" should be installed as a devDependency.",
        "name": "projenDevDependency",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenDevDependency",
        ],
        "switch": "projen-dev-dependency",
        "type": "boolean",
      },
      Object {
        "default": "- \\"true\\" if mergify auto-merge is enabled (default)",
        "docs": "Automatically merge projen upgrade PRs when build passes.",
        "name": "projenUpgradeAutoMerge",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenUpgradeAutoMerge",
        ],
        "switch": "projen-upgrade-auto-merge",
        "type": "boolean",
      },
      Object {
        "default": "[ \\"0 6 * * *\\" ]",
        "docs": "Customize the projenUpgrade schedule in cron expression.",
        "name": "projenUpgradeSchedule",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenUpgradeSchedule",
        ],
        "switch": "projen-upgrade-schedule",
        "type": "unknown",
      },
      Object {
        "default": "- no automatic projen upgrade pull requests",
        "docs": "Periodically submits a pull request for projen upgrades (executes \`yarn projen:upgrade\`).",
        "name": "projenUpgradeSecret",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenUpgradeSecret",
        ],
        "switch": "projen-upgrade-secret",
        "type": "string",
      },
      Object {
        "default": "Semver.latest()",
        "docs": "Version of projen to install.",
        "name": "projenVersion",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "projenVersion",
        ],
        "switch": "projen-version",
        "type": "Semver",
      },
      Object {
        "default": "true",
        "docs": "Include a GitHub pull request template.",
        "name": "pullRequestTemplate",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "pullRequestTemplate",
        ],
        "switch": "pull-request-template",
        "type": "boolean",
      },
      Object {
        "default": "- default content",
        "docs": "The contents of the pull request template.",
        "name": "pullRequestTemplateContents",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "pullRequestTemplateContents",
        ],
        "switch": "pull-request-template-contents",
        "type": "string",
      },
      Object {
        "name": "readme",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "readme",
        ],
        "switch": "readme",
        "type": "string",
      },
      Object {
        "default": "- true if not a subproject",
        "docs": "Installs a GitHub workflow which is triggered when the comment \\"@projen rebuild\\" is added to a pull request.",
        "name": "rebuildBot",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "rebuildBot",
        ],
        "switch": "rebuild-bot",
        "type": "boolean",
      },
      Object {
        "default": "\\"rebuild\\"",
        "docs": "The pull request bot command to use in order to trigger a rebuild and commit of the contents of the branch.",
        "name": "rebuildBotCommand",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "rebuildBotCommand",
        ],
        "switch": "rebuild-bot-command",
        "type": "string",
      },
      Object {
        "default": "[ \\"master\\" ]",
        "docs": "Branches which trigger a release.",
        "name": "releaseBranches",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "releaseBranches",
        ],
        "switch": "release-branches",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Automatically release new versions every commit to one of branches in \`releaseBranches\`.",
        "name": "releaseEveryCommit",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "releaseEveryCommit",
        ],
        "switch": "release-every-commit",
        "type": "boolean",
      },
      Object {
        "default": "- no scheduled releases",
        "docs": "CRON schedule to trigger new releases.",
        "name": "releaseSchedule",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "releaseSchedule",
        ],
        "switch": "release-schedule",
        "type": "string",
      },
      Object {
        "default": "false",
        "docs": "Automatically release to npm when new versions are introduced.",
        "name": "releaseToNpm",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "releaseToNpm",
        ],
        "switch": "release-to-npm",
        "type": "boolean",
      },
      Object {
        "default": "- true if not a subproject",
        "docs": "Define a GitHub workflow for releasing from \\"master\\" when new versions are bumped.",
        "name": "releaseWorkflow",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "releaseWorkflow",
        ],
        "switch": "release-workflow",
        "type": "boolean",
      },
      Object {
        "docs": "The repository is the location where the actual code for your package lives.",
        "name": "repository",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "repository",
        ],
        "switch": "repository",
        "type": "string",
      },
      Object {
        "docs": "If the package.json for your package is not in the root directory (for example if it is part of a monorepo), you can specify the directory in which it lives.",
        "name": "repositoryDirectory",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "repositoryDirectory",
        ],
        "switch": "repository-directory",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Generate one-time sample in \`src/\` and \`test/\` if there are no files there.",
        "name": "sampleCode",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "sampleCode",
        ],
        "switch": "sample-code",
        "type": "boolean",
      },
      Object {
        "default": "{}",
        "docs": "npm scripts to include.",
        "name": "scripts",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "scripts",
        ],
        "switch": "scripts",
        "type": "unknown",
      },
      Object {
        "default": "\\"src\\"",
        "docs": "Typescript sources directory.",
        "name": "srcdir",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "srcdir",
        ],
        "switch": "srcdir",
        "type": "string",
      },
      Object {
        "docs": "Package's Stability.",
        "name": "stability",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "stability",
        ],
        "switch": "stability",
        "type": "string",
      },
      Object {
        "default": "\\"test\\"",
        "docs": "Tests directory.",
        "name": "testdir",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "testdir",
        ],
        "switch": "testdir",
        "type": "string",
      },
      Object {
        "docs": "Custom TSConfig.",
        "name": "tsconfig",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "tsconfig",
        ],
        "switch": "tsconfig",
        "type": "TypescriptConfigOptions",
      },
      Object {
        "default": "\\"^3.9.5\\"",
        "docs": "TypeScript version to use.",
        "name": "typescriptVersion",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "typescriptVersion",
        ],
        "switch": "typescript-version",
        "type": "string",
      },
      Object {
        "default": "\\"yarn install --frozen-lockfile && yarn projen\\"",
        "docs": "Workflow steps to use in order to bootstrap this repo.",
        "name": "workflowBootstrapSteps",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "workflowBootstrapSteps",
        ],
        "switch": "workflow-bootstrap-steps",
        "type": "unknown",
      },
      Object {
        "default": "- default image",
        "docs": "Container image to use for GitHub workflows.",
        "name": "workflowContainerImage",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "workflowContainerImage",
        ],
        "switch": "workflow-container-image",
        "type": "string",
      },
      Object {
        "default": "- same as \`minNodeVersion\`",
        "docs": "The node version to use in GitHub workflows.",
        "name": "workflowNodeVersion",
        "optional": true,
        "parent": "NodeProjectCommonOptions",
        "path": Array [
          "workflowNodeVersion",
        ],
        "switch": "workflow-node-version",
        "type": "string",
      },
    ],
    "pjid": "typescript-app",
    "typename": "TypeScriptAppProject",
  },
]
`;
